/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.carloz.inputmethod;

public final class R {
    public static final class anim {
        public static final int alt_code_key_while_typing_fadein=0x7f040000;
        public static final int alt_code_key_while_typing_fadeout=0x7f040001;
        public static final int key_preview_dismiss_holo=0x7f040002;
        public static final int key_preview_dismiss_lxx=0x7f040003;
        public static final int key_preview_show_up_holo=0x7f040004;
        public static final int key_preview_show_up_lxx=0x7f040005;
        public static final int language_on_spacebar_fadeout=0x7f040006;
    }
    public static final class array {
        /**  Build condition,keyboard_height_in_dp 
         */
        public static final int keyboard_heights=0x7f0c0004;
        /**  An element must be a keyboard theme id of {@link KeyboardTheme#THEME_ID_*}. 
         */
        public static final int keyboard_theme_ids=0x7f0c0006;
        /**  For keyboard color scheme option dialog. 
         */
        public static final int keyboard_theme_names=0x7f0c0005;
        /**  Compatibility map from subtypeLocale:subtypeExtraValue to keyboardLayoutSet 
         */
        public static final int locale_and_extra_value_to_keyboard_layout_set_map=0x7f0c0003;
        /**  Predefined keyboard layout display names 
         */
        public static final int predefined_layout_display_names=0x7f0c0002;
        /**  Predefined keyboard layouts for additional subtype 
         */
        public static final int predefined_layouts=0x7f0c0001;
        /**  Subtype locale display name exceptions.
         For each exception, there should be related string resources for display name that may have
         explicit keyboard layout. The string resource name must be "subtype_<locale>" or
         "subtype_with_layout_<locale>. Please refer to strings.xml for these resources. 
         */
        public static final int subtype_locale_exception_keys=0x7f0c0000;
        /**  Note that correctionX is obsolete (See com.android.inputmethod.keyboard.internal.TouchPositionCorrection)
        An entry of the touch_position_correction word should be:
        1. correctionX: (touch_center_x - hitbox_center_x) / hitbox_width
        2. correctionY: (touch_center_y - hitbox_center_y) / hitbox_height
        3. correctionR: sweet_spot_radius / sqrt(hitbox_width^2 + hitbox_height^2)
    
 The default touch position data (See com.android.inputmethod.keyboard.ProximityInfo)
             correctionX = 0.0f
             correctionY = 0.0f
             correctionR = DEFAULT_TOUCH_POSITION_CORRECTION_RADIUS
        
         */
        public static final int touch_position_correction_data_default=0x7f0c0007;
        public static final int touch_position_correction_data_holo=0x7f0c0008;
    }
    public static final class attr {
        /**  The keys to display in the more keys keyboard in addition to moreKeys.
             The additional more keys are inserted at the '%' markers in the moreKeys if any.
             They are inserted at the head of moreKeys if none.
             If there are remaining entries of additionalMoreKeys even after all '%' markers have
             been replaced, those remaining entries are appended at the end of moreKeys. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int additionalMoreKeys=0x7f010090;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphaObsoleted=0x7f010067;
        /**  The alternate unicode value that this key outputs while typing.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int altCode=0x7f01008e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int altCodeKeyWhileTypingFadeinAnimator=0x7f01001d;
        /**  Fadeout and fadein animator for altCodeWhileTyping keys. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int altCodeKeyWhileTypingFadeoutAnimator=0x7f01001c;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimAlpha=0x7f010033;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>empty</code></td><td>0</td><td> This should be aligned with Key.BACKGROUND_TYPE_* </td></tr>
<tr><td><code>normal</code></td><td>1</td><td></td></tr>
<tr><td><code>functional</code></td><td>2</td><td></td></tr>
<tr><td><code>stickyOff</code></td><td>3</td><td></td></tr>
<tr><td><code>stickyOn</code></td><td>4</td><td></td></tr>
<tr><td><code>action</code></td><td>5</td><td></td></tr>
<tr><td><code>spacebar</code></td><td>6</td><td></td></tr>
</table>
         */
        public static final int backgroundType=0x7f010092;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int categoryIndicatorBackground=0x7f010058;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int categoryIndicatorDrawable=0x7f010057;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int categoryIndicatorEnabled=0x7f010056;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int categoryPageIndicatorBackground=0x7f01005a;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int categoryPageIndicatorColor=0x7f010059;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerSuggestionPercentile=0x7f010069;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clobberSettingsKey=0x7f0100b9;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int codesArray=0x7f01008c;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorAutoCorrect=0x7f010065;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorSuggested=0x7f010066;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorTypedWord=0x7f010064;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorValidTypedWord=0x7f010063;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int countryCode=0x7f0100c1;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int divider=0x7f010055;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int elementKeyboard=0x7f0100c5;
        /**  This should be aligned with KeyboardId.ELEMENT_* 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
<tr><td><code>emojiRecents</code></td><td>10</td><td></td></tr>
<tr><td><code>emojiCategory1</code></td><td>11</td><td></td></tr>
<tr><td><code>emojiCategory2</code></td><td>12</td><td></td></tr>
<tr><td><code>emojiCategory3</code></td><td>13</td><td></td></tr>
<tr><td><code>emojiCategory4</code></td><td>14</td><td></td></tr>
<tr><td><code>emojiCategory5</code></td><td>15</td><td></td></tr>
<tr><td><code>emojiCategory6</code></td><td>16</td><td></td></tr>
</table>
         */
        public static final int elementName=0x7f0100c4;
        /**  EmojiPalettesView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int emojiPalettesViewStyle=0x7f010003;
        /**  Enable proximity characters correction. Disabled by default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enableProximityCharsCorrection=0x7f0100c6;
        /**  Background image for the functional key. This image needs to be a
             {@link StateListDrawable}, with the following possible states: normal, pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int functionalKeyBackground=0x7f01000a;
        /**  Color to use for the label in a key that has followFunctionalTextColor keyLabelFlags. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int functionalTextColor=0x7f0100aa;
        /**  Static threshold for starting gesture detection (keyWidth%/sec) 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDetectFastMoveSpeedThreshold=0x7f01004a;
        /**  Distance based threshold values for gesture detection (keyWidth%/sec) 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicDistanceThresholdFrom=0x7f01004e;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicDistanceThresholdTo=0x7f01004f;
        /**  Dynamic threshold for gesture after fast typing (msec) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicThresholdDecayDuration=0x7f01004b;
        /**  Time based threshold values for gesture detection (msec) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicTimeThresholdFrom=0x7f01004c;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicTimeThresholdTo=0x7f01004d;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewColor=0x7f010045;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewHorizontalPadding=0x7f010046;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewRoundRadius=0x7f010048;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewTextColor=0x7f010043;
        /**  Delay after gesture input and gesture floating preview text dismissing in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewTextLingerTimeout=0x7f010041;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewTextOffset=0x7f010044;
        /**  Attributes for GestureFloatingPreviewText 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewTextSize=0x7f010042;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewVerticalPadding=0x7f010047;
        /**  Parameters for gesture recognition (msec) and (keyWidth%/sec) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureRecognitionMinimumTime=0x7f010051;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureRecognitionSpeedThreshold=0x7f010053;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureRecognitionUpdateTime=0x7f010052;
        /**  Parameter for gesture sampling (keyWidth%/sec) 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureSamplingMinimumDistance=0x7f010050;
        /**  Static threshold for gesture after fast typing (msec) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStaticTimeThresholdAfterFastTyping=0x7f010049;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailBodyRatio=0x7f01003f;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailColor=0x7f01003c;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailEndWidth=0x7f01003e;
        /**  Duration while gesture trail is fading out in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailFadeoutDuration=0x7f01003a;
        /**  Delay after gesture trail starts fading out in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailFadeoutStartDelay=0x7f010039;
        /**  Maximum angular threshold between gesture trail interpolation segments in degree. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailMaxInterpolationAngularThreshold=0x7f010036;
        /**  Maximum distance threshold between gesture trail interpolation segments. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailMaxInterpolationDistanceThreshold=0x7f010037;
        /**  Maximum number of gesture trail interpolation segments. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailMaxInterpolationSegments=0x7f010038;
        /**  Minimum distance between gesture trail sampling points. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailMinSamplingDistance=0x7f010035;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailShadowRatio=0x7f010040;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailStartWidth=0x7f01003d;
        /**  Interval of updating gesture trail in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailUpdateInterval=0x7f01003b;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hasShortcutKey=0x7f0100ba;
        /**  Default horizontal gap between keys, in the proportion of keyboard width. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalGap=0x7f010073;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconDeleteKey=0x7f010077;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconDoneKey=0x7f01007f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiActionKey=0x7f01008a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiCategory1Tab=0x7f01005c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiCategory2Tab=0x7f01005d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiCategory3Tab=0x7f01005e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiCategory4Tab=0x7f01005f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiCategory5Tab=0x7f010060;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiCategory6Tab=0x7f010061;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiNormalKey=0x7f01008b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiRecentsTab=0x7f01005b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEnterKey=0x7f01007a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconGoKey=0x7f01007b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconImeKey=0x7f010089;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconLanguageSwitchKey=0x7f010086;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconNextKey=0x7f01007e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconPreviousKey=0x7f010080;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSearchKey=0x7f01007c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSendKey=0x7f01007d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSettingsKey=0x7f010078;
        /**  Icon set for key top and key preview.
             These should be aligned with KeyboardIconsSet.NAMES_AND_ATTR_IDS[] 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShiftKey=0x7f010076;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShiftKeyShifted=0x7f010084;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShortcutKey=0x7f010082;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShortcutKeyDisabled=0x7f010085;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSpaceKey=0x7f010079;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSpaceKeyForNumberLayout=0x7f010083;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconTabKey=0x7f010081;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconZwjKey=0x7f010088;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconZwnjKey=0x7f010087;
        /**  Ignore special key timeout while typing in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ignoreAltCodeKeyTimeout=0x7f01002a;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>actionUnspecified</code></td><td>0</td><td> This should be aligned with EditorInfo.IME_ACTION_* </td></tr>
<tr><td><code>actionNone</code></td><td>1</td><td></td></tr>
<tr><td><code>actionGo</code></td><td>2</td><td></td></tr>
<tr><td><code>actionSearch</code></td><td>3</td><td></td></tr>
<tr><td><code>actionSend</code></td><td>4</td><td></td></tr>
<tr><td><code>actionNext</code></td><td>5</td><td></td></tr>
<tr><td><code>actionDone</code></td><td>6</td><td></td></tr>
<tr><td><code>actionPrevious</code></td><td>7</td><td></td></tr>
<tr><td><code>actionCustomLabel</code></td><td>0x100</td><td>  This should be aligned with KeyboardId.IME_ACTION_* </td></tr>
</table>
         */
        public static final int imeAction=0x7f0100bd;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isIconDefined=0x7f0100be;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isMultiLine=0x7f0100bc;
        /**  The key action flags. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>isRepeatable</code></td><td>0x01</td><td> This should be aligned with Key.ACTION_FLAGS_* </td></tr>
<tr><td><code>noKeyPreview</code></td><td>0x02</td><td></td></tr>
<tr><td><code>altCodeWhileTyping</code></td><td>0x04</td><td></td></tr>
<tr><td><code>enableLongPress</code></td><td>0x08</td><td></td></tr>
</table>
         */
        public static final int keyActionFlags=0x7f010093;
        /**  Background image for the key. This image needs to be a {@link StateListDrawable},
             with the following possible states: normal, pressed, checkable, checkable+pressed,
             checkable+checked, checkable+checked+pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyBackground=0x7f010009;
        /**  The hint label to display on the key in conjunction with the label. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabel=0x7f010095;
        /**  Key hint label color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabelColor=0x7f0100ac;
        /**  The hint label's horizontal offset to the center of the key. Negative is to left and
             positive is to right. The value is in proportion of the width of
             TypefaceUtils.KEY_LABEL_REFERENCE_CHAR. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabelOffCenterRatio=0x7f0100a6;
        /**  Size of the text for hint label, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabelRatio=0x7f0100a3;
        /**  The vertical adjustment of key hint label in proportion to its height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabelVerticalAdjustment=0x7f010096;
        /**  Key hint letter (= one character hint label) color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterColor=0x7f0100ab;
        /**  Right padding of hint letter to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterPadding=0x7f01000d;
        /**  Size of the text for hint letter (= one character hint label), in the proportion of
             key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterRatio=0x7f0100a2;
        /**  Key detection hysteresis distance. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHysteresisDistance=0x7f01001e;
        /**  Key detection hysteresis distance for shift/symbols sliding input. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHysteresisDistanceForSlidingModifier=0x7f01001f;
        /**  The icon for disabled key 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyIconDisabled=0x7f010098;
        /**  The key label flags. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignHintLabelToBottom</code></td><td>0x02</td><td> This should be aligned with Key.LABEL_FLAGS__* </td></tr>
<tr><td><code>alignIconToBottom</code></td><td>0x04</td><td></td></tr>
<tr><td><code>alignLabelOffCenter</code></td><td>0x08</td><td></td></tr>
<tr><td><code>fontNormal</code></td><td>0x10</td><td></td></tr>
<tr><td><code>fontMonoSpace</code></td><td>0x20</td><td></td></tr>
<tr><td><code>fontDefault</code></td><td>0x30</td><td></td></tr>
<tr><td><code>followKeyLargeLetterRatio</code></td><td>0x40</td><td></td></tr>
<tr><td><code>followKeyLetterRatio</code></td><td>0x80</td><td></td></tr>
<tr><td><code>followKeyLabelRatio</code></td><td>0xC0</td><td></td></tr>
<tr><td><code>followKeyHintLabelRatio</code></td><td>0x140</td><td></td></tr>
<tr><td><code>hasPopupHint</code></td><td>0x200</td><td></td></tr>
<tr><td><code>hasShiftedLetterHint</code></td><td>0x400</td><td></td></tr>
<tr><td><code>hasHintLabel</code></td><td>0x800</td><td></td></tr>
<tr><td><code>autoXScale</code></td><td>0x4000</td><td></td></tr>
<tr><td><code>autoScale</code></td><td>0xc000</td><td> The autoScale value implies autoXScale bit on to optimize scaling code path. </td></tr>
<tr><td><code>preserveCase</code></td><td>0x10000</td><td> If true, character case of code, altCode, moreKeys, keyOutputText, keyLabel,
                 or keyHintLabel will never be subject to change. </td></tr>
<tr><td><code>shiftedLetterActivated</code></td><td>0x20000</td><td> If true, use keyShiftedLetterHintActivatedColor for the shifted letter hint and
                 keyTextInactivatedColor for the primary key top label. </td></tr>
<tr><td><code>fromCustomActionLabel</code></td><td>0x40000</td><td> If true, use EditorInfo.actionLabel for the key label. </td></tr>
<tr><td><code>followFunctionalTextColor</code></td><td>0x80000</td><td> If true, use functionalTextColor instead of ketTextColor to drawing the label on
                 the key </td></tr>
<tr><td><code>keepBackgroundAspectRatio</code></td><td>0x100000</td><td> Keep aspect ratio of key background. </td></tr>
<tr><td><code>disableKeyHintLabel</code></td><td>0x40000000</td><td> If true, disable keyHintLabel. </td></tr>
<tr><td><code>disableAdditionalMoreKeys</code></td><td>0x80000000</td><td> If true, disable additionalMoreKeys. </td></tr>
</table>
         */
        public static final int keyLabelFlags=0x7f010097;
        /**  The label's horizontal offset to the center of the key. Negative is to left and
             positive is to right. The value is in proportion of the width of
             TypefaceUtils.KEY_LABEL_REFERENCE_CHAR. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabelOffCenterRatio=0x7f0100a5;
        /**  Size of the text for keys with multiple letters. If specified as fraction, the text
             size is measured in the proportion of key height. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabelSize=0x7f0100a0;
        /**  Large size of the text for one letter keys, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLargeLetterRatio=0x7f0100a1;
        /**  Size of the text for one letter keys. If specified as fraction, the text size is
             measured in the proportion of key height. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLetterSize=0x7f01009f;
        /**  Popup hint letter string
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPopupHintLetter=0x7f01000e;
        /**  Bottom padding of popup hint letter to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPopupHintLetterPadding=0x7f01000f;
        /**  Background resource for key press feedback.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewBackground=0x7f01002b;
        /**  Key preview dismiss animator 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewDismissAnimator=0x7f010030;
        /**  Height of the key press feedback popup. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewHeight=0x7f01002d;
        /**  TODO: consolidate key preview linger timeout with the key preview animation parameters. 
 Delay after key releasing and key press feedback dismissing in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewLingerTimeout=0x7f01002e;
        /**  Vertical offset of the key press feedback from the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewOffset=0x7f01002c;
        /**  Key preview show up animator 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewShowUpAnimator=0x7f01002f;
        /**  Key preview visual parameters 
 The text color for key press feedback. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewTextColor=0x7f0100af;
        /**  Size of the text for key press feedback popup, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewTextRatio=0x7f0100b0;
        /**  Key repeat interval in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyRepeatInterval=0x7f010028;
        /**  Key repeat start timeout 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyRepeatStartTimeout=0x7f010027;
        /**  Enable key selection by dragging finger 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keySelectionByDraggingFinger=0x7f010022;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintActivatedColor=0x7f0100ae;
        /**  Shifted letter hint colors 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintInactivatedColor=0x7f0100ad;
        /**  Right padding of shifted letter hint to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintPadding=0x7f010010;
        /**  Size of the text for shifted letter hint, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintRatio=0x7f0100a4;
        /**  The label, icon to display on the key. And code, outputText of the key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keySpec=0x7f010094;
        /**  The key style to specify a set of key attributes defined by <key_style/> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyStyle=0x7f010099;
        /**  Color to use for the label in a key. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextColor=0x7f0100a7;
        /**  Color to use for the label in a key when in inactivated state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextInactivatedColor=0x7f0100a9;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextShadowColor=0x7f0100a8;
        /**  Blur radius of key text shadow. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextShadowRadius=0x7f010011;
        /**  Key top visual attributes 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> This should be aligned with Typeface.NORMAL etc. </td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
<tr><td><code>boldItalic</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int keyTypeface=0x7f01009e;
        /**  Width of the key, in the proportion of keyboard width.
             If the value is fillRight, the actual key width will be determined to fill out the
             area up to the right edge of the keyboard. 
 This should be aligned with KeyboardBuilder.Row.KEYWIDTH_* 
         <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fillRight</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int keyWidth=0x7f01009c;
        /**  The X-coordinate of upper right corner of this key including horizontal gap, in the
             proportion of keyboard width.
             If the value is negative, the origin is the right edge of the keyboard. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyXPos=0x7f01009d;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardBottomPadding=0x7f01006f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardLayout=0x7f0100b1;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardLayoutSet=0x7f0100b2;
        /**  This should be aligned with KeyboardLayoutSet_Element's elementName. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
<tr><td><code>emojiRecents</code></td><td>10</td><td></td></tr>
<tr><td><code>emojiCategory1</code></td><td>11</td><td></td></tr>
<tr><td><code>emojiCategory2</code></td><td>12</td><td></td></tr>
<tr><td><code>emojiCategory3</code></td><td>13</td><td></td></tr>
<tr><td><code>emojiCategory4</code></td><td>14</td><td></td></tr>
<tr><td><code>emojiCategory5</code></td><td>15</td><td></td></tr>
<tr><td><code>emojiCategory6</code></td><td>16</td><td></td></tr>
</table>
         */
        public static final int keyboardLayoutSetElement=0x7f0100b3;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardLeftPadding=0x7f010070;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardRightPadding=0x7f010071;
        /**  Keyboard style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardStyle=0x7f010000;
        /**  This should be aligned with Keyboard.themeId and KeyboardTheme.THEME_ID_* 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ICS</code></td><td>0</td><td></td></tr>
<tr><td><code>KLP</code></td><td>2</td><td></td></tr>
<tr><td><code>LXXLight</code></td><td>3</td><td></td></tr>
<tr><td><code>LXXDark</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int keyboardTheme=0x7f0100b4;
        /**  Keyboard top, bottom, left, right edges paddings, in propotion of keyboard height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardTopPadding=0x7f01006e;
        /**  KeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardViewStyle=0x7f010001;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageCode=0x7f0100c0;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int languageOnSpacebarFadeoutAnimator=0x7f01001b;
        /**  Fadeout animator for spacebar language label. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageOnSpacebarFinalAlpha=0x7f01001a;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageOnSpacebarTextColor=0x7f010017;
        /**  Size of the text for spacebar language label, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageOnSpacebarTextRatio=0x7f010016;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageOnSpacebarTextShadowColor=0x7f010019;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageOnSpacebarTextShadowRadius=0x7f010018;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageSwitchKeyEnabled=0x7f0100bb;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int localeCode=0x7f0100bf;
        /**  Long press timeout of shift key to shift lock in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int longPressShiftLockTimeout=0x7f010029;
        /**  MainKeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int mainKeyboardViewStyle=0x7f010002;
        /**  Maximum column of more keys keyboard 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxMoreKeysColumn=0x7f010091;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxMoreSuggestionsRow=0x7f01006a;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxValue=0x7f0100c8;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minMoreSuggestionsWidth=0x7f01006b;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minValue=0x7f0100c9;
        /**  This should be aligned with KeyboardId.MODE_* 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>text</code></td><td>0</td><td></td></tr>
<tr><td><code>url</code></td><td>1</td><td></td></tr>
<tr><td><code>email</code></td><td>2</td><td></td></tr>
<tr><td><code>im</code></td><td>3</td><td></td></tr>
<tr><td><code>phone</code></td><td>4</td><td></td></tr>
<tr><td><code>number</code></td><td>5</td><td></td></tr>
</table>
         */
        public static final int mode=0x7f0100b5;
        /**  The keys to display in the more keys keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int moreKeys=0x7f01008f;
        /**  Layout resource for more keys keyboard of action key 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardForActionLayout=0x7f010032;
        /**  Layout resource for more keys keyboard 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardLayout=0x7f010031;
        /**  MoreKeysKeyboard style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardStyle=0x7f010004;
        /**  MoreKeysKeyboardView style for action key 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardViewForActionStyle=0x7f010006;
        /**  MoreKeysKeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardViewStyle=0x7f010005;
        /**  More keys keyboard layout template 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysTemplate=0x7f010075;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int navigateNext=0x7f0100b6;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int navigatePrevious=0x7f0100b7;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int parentStyle=0x7f0100c3;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int passwordInput=0x7f0100b8;
        /**  Default height of a row (key height + vertical gap), in pixels or in the proportion of
             keyboard height. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x7f010072;
        /**  More keys keyboard will shown at touched point. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showMoreKeysKeyboardAtTouchedPoint=0x7f010034;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputPreviewBodyRatio=0x7f010025;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputPreviewColor=0x7f010023;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputPreviewShadowRatio=0x7f010026;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputPreviewWidth=0x7f010024;
        /**  Background image for the spacebar.  This image needs to be a
             {@link StateListDrawable}, with the following possible states: normal, pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spacebarBackground=0x7f01000b;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacebarIconWidthRatio=0x7f01000c;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_has_morekeys=0x7f010014;
        /**  Key preview background states 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_left_edge=0x7f010012;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_right_edge=0x7f010013;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stepValue=0x7f0100ca;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int styleName=0x7f0100c2;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>autoCorrectBold</code></td><td>0x01</td><td> This should be aligned with SuggestionStripLayoutHelper.AUTO_CORRECT_* and etc. </td></tr>
<tr><td><code>autoCorrectUnderline</code></td><td>0x02</td><td></td></tr>
<tr><td><code>validTypedWordBold</code></td><td>0x04</td><td></td></tr>
</table>
         */
        public static final int suggestionStripOptions=0x7f010062;
        /**  Suggestions strip style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionStripViewStyle=0x7f010007;
        /**  Suggestion word style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionWordStyle=0x7f010008;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suggestionsCountInStrip=0x7f010068;
        /**  This should be aligned with ScriptUtils.SCRIPT_* 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>arabic</code></td><td>0</td><td></td></tr>
<tr><td><code>armenian</code></td><td>1</td><td></td></tr>
<tr><td><code>bengali</code></td><td>2</td><td></td></tr>
<tr><td><code>cyrillic</code></td><td>3</td><td></td></tr>
<tr><td><code>devanagari</code></td><td>4</td><td></td></tr>
<tr><td><code>georgian</code></td><td>5</td><td></td></tr>
<tr><td><code>greek</code></td><td>6</td><td></td></tr>
<tr><td><code>hebrew</code></td><td>7</td><td></td></tr>
<tr><td><code>kannada</code></td><td>8</td><td></td></tr>
<tr><td><code>khmer</code></td><td>9</td><td></td></tr>
<tr><td><code>lao</code></td><td>10</td><td></td></tr>
<tr><td><code>latin</code></td><td>11</td><td></td></tr>
<tr><td><code>malayalam</code></td><td>12</td><td></td></tr>
<tr><td><code>myanmar</code></td><td>13</td><td></td></tr>
<tr><td><code>sinhala</code></td><td>14</td><td></td></tr>
<tr><td><code>tamil</code></td><td>15</td><td></td></tr>
<tr><td><code>telugu</code></td><td>16</td><td></td></tr>
<tr><td><code>thai</code></td><td>17</td><td></td></tr>
</table>
         */
        public static final int supportedScript=0x7f0100c7;
        /**  Suppress showing key preview duration after batch input in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suppressKeyPreviewAfterBatchInputDuration=0x7f010054;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textsArray=0x7f01008d;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ICS</code></td><td>0</td><td> This should be aligned with KeyboardTheme.THEME_ID_*. </td></tr>
<tr><td><code>KLP</code></td><td>2</td><td></td></tr>
<tr><td><code>LXXLight</code></td><td>3</td><td></td></tr>
<tr><td><code>LXXDark</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int themeId=0x7f01006c;
        /**  Touch noise threshold distance in millimeter 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int touchNoiseThresholdDistance=0x7f010021;
        /**  Touch noise threshold time in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int touchNoiseThresholdTime=0x7f010020;
        /**  Touch position correction 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int touchPositionCorrectionData=0x7f01006d;
        /**  Amount to offset the touch Y coordinate by, for bias correction. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalCorrection=0x7f010015;
        /**  Default vertical gap between rows of keys, in the proportion of keyboard height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalGap=0x7f010074;
        /**  Visual insets, in the proportion of keyboard width. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int visualInsetsLeft=0x7f01009a;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int visualInsetsRight=0x7f01009b;
    }
    public static final class bool {
        public static final int config_block_potentially_offensive=0x7f060001;
        /**  Whether or not Popup on key press is enabled by default 
         */
        public static final int config_default_key_preview_popup=0x7f060005;
        /**  Default value for next word prediction: after entering a word and a space only, should we look
         at input history to suggest a hopefully helpful suggestions for the next word? 
         */
        public static final int config_default_next_word_prediction=0x7f060002;
        public static final int config_default_sound_enabled=0x7f060006;
        public static final int config_default_vibration_enabled=0x7f060003;
        public static final int config_enable_show_key_preview_popup_option=0x7f060004;
        public static final int config_enable_show_voice_key_option=0x7f060007;
        public static final int config_key_selection_by_dragging_finger=0x7f060008;
        /**  Showing more keys keyboard, just above the touched point if true, aligned to the key if
         false 
         */
        public static final int config_show_more_keys_keyboard_at_touched_point=0x7f060009;
        public static final int config_use_fullscreen_mode=0x7f06000a;
        /**  Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
         */
        public static final int im_is_default=0x7f060000;
    }
    public static final class color {
        public static final int auto_correct_color_lxx_dark=0x7f070028;
        public static final int auto_correct_color_lxx_light=0x7f070018;
        public static final int emoji_tab_page_indicator_background_holo=0x7f07000d;
        public static final int emoji_tab_page_indicator_background_lxx_dark=0x7f070031;
        public static final int emoji_tab_page_indicator_background_lxx_light=0x7f070021;
        public static final int gesture_floating_preview_color_holo=0x7f07000c;
        public static final int gesture_floating_preview_color_lxx_dark=0x7f070030;
        public static final int gesture_floating_preview_color_lxx_light=0x7f070020;
        public static final int gesture_trail_color_lxx_dark=0x7f07002b;
        public static final int gesture_trail_color_lxx_light=0x7f07001b;
        /**  Color resources for IceCreamSandwich theme. Base color = 33B5E5 
 android:color/holo_blue_light value is #FF33B5E5 
         */
        public static final int highlight_color_ics=0x7f070000;
        /**  Color resources for KLP theme. Base color = F0F0F0 
         */
        public static final int highlight_color_klp=0x7f07000e;
        public static final int highlight_color_lxx_dark=0x7f070027;
        public static final int highlight_color_lxx_light=0x7f070017;
        public static final int highlight_translucent_color_ics=0x7f070003;
        public static final int highlight_translucent_color_klp=0x7f070011;
        public static final int key_background_lxx_dark=0x7f07002d;
        public static final int key_background_lxx_light=0x7f07001d;
        public static final int key_background_pressed_lxx_dark=0x7f07002e;
        public static final int key_background_pressed_lxx_light=0x7f07001e;
        public static final int key_functional_text_color_lxx_dark=0x7f070023;
        public static final int key_functional_text_color_lxx_light=0x7f070013;
        public static final int key_hint_label_color_holo=0x7f070007;
        public static final int key_hint_letter_color_holo=0x7f070006;
        public static final int key_hint_letter_color_lxx_dark=0x7f070025;
        public static final int key_hint_letter_color_lxx_light=0x7f070015;
        public static final int key_shifted_letter_hint_activated_color_holo=0x7f070009;
        public static final int key_shifted_letter_hint_inactivated_color_holo=0x7f070008;
        public static final int key_text_color_holo=0x7f070004;
        /**  Color resources for LXX_Dark theme.
         10%:0x19 50%:0x80 70%:0xB3 75%:0xC0 80%:0xCC 85%:0xD9 90%:0xE6  
         */
        public static final int key_text_color_lxx_dark=0x7f070022;
        /**  Color resources for LXX_Light theme.
         15%:0x26 70%:0xB3 75%:0xC0 80%:0xCC 85%:0xD9 90%:0xE6 
         */
        public static final int key_text_color_lxx_light=0x7f070012;
        public static final int key_text_inactivated_color_holo=0x7f070005;
        public static final int key_text_inactive_color_lxx_dark=0x7f070024;
        public static final int key_text_inactive_color_lxx_light=0x7f070014;
        public static final int language_on_spacebar_text_color_lxx_dark=0x7f070026;
        public static final int language_on_spacebar_text_color_lxx_light=0x7f070016;
        /**  Accent color for the notification. We need to match this to the OS build 
         */
        public static final int notification_accent_color=0x7f070037;
        /**  Color resources for setup wizard and tutorial 
         */
        public static final int setup_background=0x7f070032;
        public static final int setup_step_background=0x7f070035;
        public static final int setup_text_action=0x7f070034;
        public static final int setup_text_dark=0x7f070033;
        public static final int setup_welcome_video_margin_color=0x7f070036;
        public static final int sliding_key_input_preview_color_lxx_dark=0x7f07002c;
        public static final int sliding_key_input_preview_color_lxx_light=0x7f07001c;
        public static final int spacebar_text_color_holo=0x7f07000a;
        public static final int spacebar_text_shadow_color_holo=0x7f07000b;
        public static final int suggested_word_background_selected_lxx_dark=0x7f07002f;
        public static final int suggested_word_background_selected_lxx_light=0x7f07001f;
        public static final int suggested_word_color_ics=0x7f070002;
        public static final int suggested_word_color_klp=0x7f070010;
        public static final int suggested_word_color_lxx_dark=0x7f07002a;
        public static final int suggested_word_color_lxx_light=0x7f07001a;
        public static final int typed_word_color_ics=0x7f070001;
        public static final int typed_word_color_klp=0x7f07000f;
        public static final int typed_word_color_lxx_dark=0x7f070029;
        public static final int typed_word_color_lxx_light=0x7f070019;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Example customization of dimensions originally defined in res/values/dimens.xml
         (such as screen margins) for screens with more than 820dp of available width. This
         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
    
         */
        public static final int activity_horizontal_margin=0x7f0a0028;
        public static final int activity_vertical_margin=0x7f0a0029;
        /**  Inset used in Accessibility mode to avoid accidental key presses when a finger slides off the screen. 
         */
        public static final int config_accessibility_edge_slop=0x7f0a000e;
        /**  Preferable keyboard height in absolute scale: 1.285in 
 This config_default_keyboard_height value should match with keyboard-heights.xml 
         */
        public static final int config_default_keyboard_height=0x7f0a0010;
        /**  Common configuration of Emoji keyboard 
         */
        public static final int config_emoji_category_page_id_height=0x7f0a000d;
        public static final int config_gesture_floating_preview_horizontal_padding=0x7f0a0025;
        public static final int config_gesture_floating_preview_round_radius=0x7f0a0027;
        public static final int config_gesture_floating_preview_text_offset=0x7f0a0024;
        /**  Gesture floating preview text parameters 
         */
        public static final int config_gesture_floating_preview_text_size=0x7f0a0023;
        public static final int config_gesture_floating_preview_vertical_padding=0x7f0a0026;
        public static final int config_gesture_trail_end_width=0x7f0a000c;
        /**  Maximum distance threshold between gesture trails interpolation segments. 
         */
        public static final int config_gesture_trail_max_interpolation_distance_threshold=0x7f0a000a;
        /**  Common gesture trail parameters 
 Minimum distance between gesture trail sampling points. 
         */
        public static final int config_gesture_trail_min_sampling_distance=0x7f0a0009;
        public static final int config_gesture_trail_start_width=0x7f0a000b;
        public static final int config_key_hint_letter_padding=0x7f0a0019;
        public static final int config_key_hysteresis_distance=0x7f0a000f;
        public static final int config_key_hysteresis_distance_for_sliding_modifier=0x7f0a0001;
        /**  Common key top visual configuration. 
         */
        public static final int config_key_popup_hint_letter_padding=0x7f0a0005;
        public static final int config_key_preview_height_holo=0x7f0a0016;
        public static final int config_key_preview_height_lxx=0x7f0a0018;
        public static final int config_key_preview_offset_holo=0x7f0a0015;
        public static final int config_key_preview_offset_lxx=0x7f0a0017;
        public static final int config_key_shifted_letter_hint_padding=0x7f0a001a;
        public static final int config_keyboard_vertical_correction=0x7f0a0004;
        public static final int config_language_on_spacebar_horizontal_margin=0x7f0a0002;
        public static final int config_more_keys_keyboard_key_height=0x7f0a0011;
        public static final int config_more_keys_keyboard_key_horizontal_padding=0x7f0a0013;
        /**  Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 config_more_keys_keyboard_key_height x 1.2 
         */
        public static final int config_more_keys_keyboard_slide_allowance=0x7f0a0012;
        /**  config_more_keys_keyboard_key_height x -0.5 
         */
        public static final int config_more_keys_keyboard_vertical_correction_holo=0x7f0a0014;
        public static final int config_more_suggestions_bottom_gap=0x7f0a0007;
        public static final int config_more_suggestions_hint_text_size=0x7f0a0022;
        /**  Common more suggestions configuraion. 
         */
        public static final int config_more_suggestions_key_horizontal_padding=0x7f0a0006;
        public static final int config_more_suggestions_modal_tolerance=0x7f0a0008;
        public static final int config_more_suggestions_row_height=0x7f0a001e;
        /**  Sliding key input preview parameters 
         */
        public static final int config_sliding_key_input_preview_width=0x7f0a0000;
        public static final int config_suggestion_min_width=0x7f0a001f;
        public static final int config_suggestion_text_horizontal_padding=0x7f0a0020;
        public static final int config_suggestion_text_size=0x7f0a0021;
        public static final int config_suggestions_strip_edge_key_width=0x7f0a001d;
        public static final int config_suggestions_strip_height=0x7f0a001b;
        public static final int config_suggestions_strip_horizontal_margin=0x7f0a001c;
        public static final int config_touch_noise_threshold_distance=0x7f0a0003;
    }
    public static final class drawable {
        public static final int btn_keyboard_key_active_ics_dark=0x7f020000;
        public static final int btn_keyboard_key_active_klp_dark=0x7f020001;
        public static final int btn_keyboard_key_active_lxx_dark=0x7f020002;
        public static final int btn_keyboard_key_active_lxx_light=0x7f020003;
        public static final int btn_keyboard_key_active_pressed_lxx_dark=0x7f020004;
        public static final int btn_keyboard_key_active_pressed_lxx_light=0x7f020005;
        public static final int btn_keyboard_key_functional_ics=0x7f020006;
        public static final int btn_keyboard_key_functional_klp=0x7f020007;
        public static final int btn_keyboard_key_functional_lxx_dark=0x7f020008;
        public static final int btn_keyboard_key_functional_lxx_light=0x7f020009;
        public static final int btn_keyboard_key_ics=0x7f02000a;
        public static final int btn_keyboard_key_klp=0x7f02000b;
        public static final int btn_keyboard_key_lxx_dark=0x7f02000c;
        public static final int btn_keyboard_key_lxx_light=0x7f02000d;
        public static final int btn_keyboard_key_normal_holo_dark=0x7f02000e;
        public static final int btn_keyboard_key_normal_holo_light=0x7f02000f;
        public static final int btn_keyboard_key_normal_off_holo_dark=0x7f020010;
        public static final int btn_keyboard_key_normal_off_lxx_dark=0x7f020011;
        public static final int btn_keyboard_key_normal_off_lxx_light=0x7f020012;
        public static final int btn_keyboard_key_normal_on_ics_dark=0x7f020013;
        public static final int btn_keyboard_key_normal_on_klp_dark=0x7f020014;
        public static final int btn_keyboard_key_normal_on_lxx_dark=0x7f020015;
        public static final int btn_keyboard_key_normal_on_lxx_light=0x7f020016;
        public static final int btn_keyboard_key_popup_action_lxx_dark=0x7f020017;
        public static final int btn_keyboard_key_popup_action_lxx_light=0x7f020018;
        public static final int btn_keyboard_key_popup_ics=0x7f020019;
        public static final int btn_keyboard_key_popup_klp=0x7f02001a;
        public static final int btn_keyboard_key_popup_lxx_dark=0x7f02001b;
        public static final int btn_keyboard_key_popup_lxx_light=0x7f02001c;
        public static final int btn_keyboard_key_popup_selected_ics=0x7f02001d;
        public static final int btn_keyboard_key_popup_selected_klp=0x7f02001e;
        public static final int btn_keyboard_key_popup_selected_lxx_dark=0x7f02001f;
        public static final int btn_keyboard_key_popup_selected_lxx_light=0x7f020020;
        public static final int btn_keyboard_key_pressed_ics_dark=0x7f020021;
        public static final int btn_keyboard_key_pressed_ics_light=0x7f020022;
        public static final int btn_keyboard_key_pressed_klp_dark=0x7f020023;
        public static final int btn_keyboard_key_pressed_klp_light=0x7f020024;
        public static final int btn_keyboard_key_pressed_off_ics_dark=0x7f020025;
        public static final int btn_keyboard_key_pressed_off_klp_dark=0x7f020026;
        public static final int btn_keyboard_key_pressed_off_lxx_dark=0x7f020027;
        public static final int btn_keyboard_key_pressed_off_lxx_light=0x7f020028;
        public static final int btn_keyboard_key_pressed_on_ics_dark=0x7f020029;
        public static final int btn_keyboard_key_pressed_on_klp_dark=0x7f02002a;
        public static final int btn_keyboard_key_pressed_on_lxx_dark=0x7f02002b;
        public static final int btn_keyboard_key_pressed_on_lxx_light=0x7f02002c;
        public static final int btn_keyboard_spacebar_ics=0x7f02002d;
        public static final int btn_keyboard_spacebar_klp=0x7f02002e;
        public static final int btn_keyboard_spacebar_lxx_dark=0x7f02002f;
        public static final int btn_keyboard_spacebar_lxx_light=0x7f020030;
        public static final int btn_keyboard_spacebar_normal_lxx_dark=0x7f020031;
        public static final int btn_keyboard_spacebar_normal_lxx_light=0x7f020032;
        public static final int btn_keyboard_spacebar_pressed_lxx_dark=0x7f020033;
        public static final int btn_keyboard_spacebar_pressed_lxx_light=0x7f020034;
        public static final int btn_suggestion_ics=0x7f020035;
        public static final int btn_suggestion_klp=0x7f020036;
        public static final int btn_suggestion_lxx_dark=0x7f020037;
        public static final int btn_suggestion_lxx_light=0x7f020038;
        public static final int emoji_category_tab_selected_ics=0x7f020039;
        public static final int emoji_category_tab_selected_klp=0x7f02003a;
        public static final int emoji_category_tab_unselected_holo_dark=0x7f02003b;
        public static final int ic_add_circle_wht_24dp=0x7f02003c;
        public static final int ic_emoji_emoticons_activated_holo_dark=0x7f02003d;
        public static final int ic_emoji_emoticons_activated_lxx_dark=0x7f02003e;
        public static final int ic_emoji_emoticons_activated_lxx_light=0x7f02003f;
        public static final int ic_emoji_emoticons_holo_dark=0x7f020040;
        public static final int ic_emoji_emoticons_lxx_dark=0x7f020041;
        public static final int ic_emoji_emoticons_lxx_light=0x7f020042;
        public static final int ic_emoji_emoticons_normal_holo_dark=0x7f020043;
        public static final int ic_emoji_emoticons_normal_lxx_dark=0x7f020044;
        public static final int ic_emoji_emoticons_normal_lxx_light=0x7f020045;
        public static final int ic_emoji_nature_activated_holo_dark=0x7f020046;
        public static final int ic_emoji_nature_activated_lxx_dark=0x7f020047;
        public static final int ic_emoji_nature_activated_lxx_light=0x7f020048;
        public static final int ic_emoji_nature_holo_dark=0x7f020049;
        public static final int ic_emoji_nature_lxx_dark=0x7f02004a;
        public static final int ic_emoji_nature_lxx_light=0x7f02004b;
        public static final int ic_emoji_nature_normal_holo_dark=0x7f02004c;
        public static final int ic_emoji_nature_normal_lxx_dark=0x7f02004d;
        public static final int ic_emoji_nature_normal_lxx_light=0x7f02004e;
        public static final int ic_emoji_objects_activated_holo_dark=0x7f02004f;
        public static final int ic_emoji_objects_activated_lxx_dark=0x7f020050;
        public static final int ic_emoji_objects_activated_lxx_light=0x7f020051;
        public static final int ic_emoji_objects_holo_dark=0x7f020052;
        public static final int ic_emoji_objects_lxx_dark=0x7f020053;
        public static final int ic_emoji_objects_lxx_light=0x7f020054;
        public static final int ic_emoji_objects_normal_holo_dark=0x7f020055;
        public static final int ic_emoji_objects_normal_lxx_dark=0x7f020056;
        public static final int ic_emoji_objects_normal_lxx_light=0x7f020057;
        public static final int ic_emoji_people_activated_holo_dark=0x7f020058;
        public static final int ic_emoji_people_activated_lxx_dark=0x7f020059;
        public static final int ic_emoji_people_activated_lxx_light=0x7f02005a;
        public static final int ic_emoji_people_holo_dark=0x7f02005b;
        public static final int ic_emoji_people_lxx_dark=0x7f02005c;
        public static final int ic_emoji_people_lxx_light=0x7f02005d;
        public static final int ic_emoji_people_normal_holo_dark=0x7f02005e;
        public static final int ic_emoji_people_normal_lxx_dark=0x7f02005f;
        public static final int ic_emoji_people_normal_lxx_light=0x7f020060;
        public static final int ic_emoji_places_activated_holo_dark=0x7f020061;
        public static final int ic_emoji_places_activated_lxx_dark=0x7f020062;
        public static final int ic_emoji_places_activated_lxx_light=0x7f020063;
        public static final int ic_emoji_places_holo_dark=0x7f020064;
        public static final int ic_emoji_places_lxx_dark=0x7f020065;
        public static final int ic_emoji_places_lxx_light=0x7f020066;
        public static final int ic_emoji_places_normal_holo_dark=0x7f020067;
        public static final int ic_emoji_places_normal_lxx_dark=0x7f020068;
        public static final int ic_emoji_places_normal_lxx_light=0x7f020069;
        public static final int ic_emoji_recents_activated_holo_dark=0x7f02006a;
        public static final int ic_emoji_recents_activated_lxx_dark=0x7f02006b;
        public static final int ic_emoji_recents_activated_lxx_light=0x7f02006c;
        public static final int ic_emoji_recents_holo_dark=0x7f02006d;
        public static final int ic_emoji_recents_lxx_dark=0x7f02006e;
        public static final int ic_emoji_recents_lxx_light=0x7f02006f;
        public static final int ic_emoji_recents_normal_holo_dark=0x7f020070;
        public static final int ic_emoji_recents_normal_lxx_dark=0x7f020071;
        public static final int ic_emoji_recents_normal_lxx_light=0x7f020072;
        public static final int ic_emoji_symbols_activated_holo_dark=0x7f020073;
        public static final int ic_emoji_symbols_activated_lxx_dark=0x7f020074;
        public static final int ic_emoji_symbols_activated_lxx_light=0x7f020075;
        public static final int ic_emoji_symbols_holo_dark=0x7f020076;
        public static final int ic_emoji_symbols_lxx_dark=0x7f020077;
        public static final int ic_emoji_symbols_lxx_light=0x7f020078;
        public static final int ic_emoji_symbols_normal_holo_dark=0x7f020079;
        public static final int ic_emoji_symbols_normal_lxx_dark=0x7f02007a;
        public static final int ic_emoji_symbols_normal_lxx_light=0x7f02007b;
        public static final int ic_ime_switcher_dark=0x7f02007c;
        public static final int ic_launcher=0x7f02007d;
        public static final int ic_launcher_keyboard=0x7f02007e;
        public static final int ic_menu_add=0x7f02007f;
        public static final int ic_notify_dictionary=0x7f020080;
        public static final int ic_setup_finish=0x7f020081;
        public static final int ic_setup_step1=0x7f020082;
        public static final int ic_setup_step2=0x7f020083;
        public static final int ic_setup_step3=0x7f020084;
        public static final int keyboard_background_holo=0x7f020085;
        public static final int keyboard_background_lxx_dark=0x7f020086;
        public static final int keyboard_background_lxx_light=0x7f020087;
        public static final int keyboard_key_feedback_background=0x7f020088;
        public static final int keyboard_key_feedback_background_ics=0x7f020089;
        public static final int keyboard_key_feedback_background_klp=0x7f02008a;
        public static final int keyboard_key_feedback_background_lxx_dark=0x7f02008b;
        public static final int keyboard_key_feedback_background_lxx_light=0x7f02008c;
        public static final int keyboard_key_feedback_ics=0x7f02008d;
        public static final int keyboard_key_feedback_klp=0x7f02008e;
        public static final int keyboard_key_feedback_left_background_ics=0x7f02008f;
        public static final int keyboard_key_feedback_left_background_klp=0x7f020090;
        public static final int keyboard_key_feedback_left_more_background_ics=0x7f020091;
        public static final int keyboard_key_feedback_left_more_background_klp=0x7f020092;
        public static final int keyboard_key_feedback_lxx_dark=0x7f020093;
        public static final int keyboard_key_feedback_lxx_light=0x7f020094;
        public static final int keyboard_key_feedback_more_background=0x7f020095;
        public static final int keyboard_key_feedback_more_background_ics=0x7f020096;
        public static final int keyboard_key_feedback_more_background_klp=0x7f020097;
        public static final int keyboard_key_feedback_more_background_lxx_dark=0x7f020098;
        public static final int keyboard_key_feedback_more_background_lxx_light=0x7f020099;
        public static final int keyboard_key_feedback_right_background_ics=0x7f02009a;
        public static final int keyboard_key_feedback_right_background_klp=0x7f02009b;
        public static final int keyboard_key_feedback_right_more_background_ics=0x7f02009c;
        public static final int keyboard_key_feedback_right_more_background_klp=0x7f02009d;
        public static final int keyboard_popup_panel_background_ics=0x7f02009e;
        public static final int keyboard_popup_panel_background_klp=0x7f02009f;
        public static final int keyboard_popup_panel_background_lxx_dark=0x7f0200a0;
        public static final int keyboard_popup_panel_background_lxx_light=0x7f0200a1;
        public static final int keyboard_suggest_strip_holo=0x7f0200a2;
        public static final int keyboard_suggest_strip_lxx_dark=0x7f0200a3;
        public static final int keyboard_suggest_strip_lxx_light=0x7f0200a4;
        public static final int more_keys_divider=0x7f0200a5;
        public static final int more_suggestions_divider=0x7f0200a6;
        public static final int setup_step_action_background=0x7f0200a7;
        public static final int suggestions_strip_divider_holo=0x7f0200a8;
        public static final int suggestions_strip_divider_lxx_dark=0x7f0200a9;
        public static final int suggestions_strip_divider_lxx_light=0x7f0200aa;
        public static final int sym_keyboard_delete_holo_dark=0x7f0200ab;
        public static final int sym_keyboard_delete_lxx_dark=0x7f0200ac;
        public static final int sym_keyboard_delete_lxx_light=0x7f0200ad;
        public static final int sym_keyboard_done_lxx_dark=0x7f0200ae;
        public static final int sym_keyboard_done_lxx_light=0x7f0200af;
        public static final int sym_keyboard_go_lxx_dark=0x7f0200b0;
        public static final int sym_keyboard_go_lxx_light=0x7f0200b1;
        public static final int sym_keyboard_language_switch_dark=0x7f0200b2;
        public static final int sym_keyboard_language_switch_lxx_dark=0x7f0200b3;
        public static final int sym_keyboard_language_switch_lxx_light=0x7f0200b4;
        public static final int sym_keyboard_next_lxx_dark=0x7f0200b5;
        public static final int sym_keyboard_next_lxx_light=0x7f0200b6;
        public static final int sym_keyboard_previous_lxx_dark=0x7f0200b7;
        public static final int sym_keyboard_previous_lxx_light=0x7f0200b8;
        public static final int sym_keyboard_return_holo_dark=0x7f0200b9;
        public static final int sym_keyboard_return_lxx_dark=0x7f0200ba;
        public static final int sym_keyboard_return_lxx_light=0x7f0200bb;
        public static final int sym_keyboard_search_holo_dark=0x7f0200bc;
        public static final int sym_keyboard_search_lxx_dark=0x7f0200bd;
        public static final int sym_keyboard_search_lxx_light=0x7f0200be;
        public static final int sym_keyboard_send_lxx_dark=0x7f0200bf;
        public static final int sym_keyboard_send_lxx_light=0x7f0200c0;
        public static final int sym_keyboard_settings_holo_dark=0x7f0200c1;
        public static final int sym_keyboard_settings_lxx_dark=0x7f0200c2;
        public static final int sym_keyboard_settings_lxx_light=0x7f0200c3;
        public static final int sym_keyboard_shift_holo_dark=0x7f0200c4;
        public static final int sym_keyboard_shift_locked_holo_dark=0x7f0200c5;
        public static final int sym_keyboard_shift_locked_lxx_dark=0x7f0200c6;
        public static final int sym_keyboard_shift_locked_lxx_light=0x7f0200c7;
        public static final int sym_keyboard_shift_lxx_dark=0x7f0200c8;
        public static final int sym_keyboard_shift_lxx_light=0x7f0200c9;
        public static final int sym_keyboard_smiley_holo_dark=0x7f0200ca;
        public static final int sym_keyboard_smiley_lxx_dark=0x7f0200cb;
        public static final int sym_keyboard_smiley_lxx_light=0x7f0200cc;
        public static final int sym_keyboard_space=0x7f0200cd;
        public static final int sym_keyboard_space_holo_dark=0x7f0200ce;
        public static final int sym_keyboard_space_lxx_dark=0x7f0200cf;
        public static final int sym_keyboard_space_lxx_light=0x7f0200d0;
        public static final int sym_keyboard_tab_holo_dark=0x7f0200d1;
        public static final int sym_keyboard_tab_lxx_dark=0x7f0200d2;
        public static final int sym_keyboard_tab_lxx_light=0x7f0200d3;
        public static final int sym_keyboard_voice_holo_dark=0x7f0200d4;
        public static final int sym_keyboard_voice_lxx_dark=0x7f0200d5;
        public static final int sym_keyboard_voice_lxx_light=0x7f0200d6;
        public static final int sym_keyboard_voice_off_holo_dark=0x7f0200d7;
        public static final int sym_keyboard_voice_off_lxx_dark=0x7f0200d8;
        public static final int sym_keyboard_voice_off_lxx_light=0x7f0200d9;
        public static final int sym_keyboard_zwj_holo_dark=0x7f0200da;
        public static final int sym_keyboard_zwj_lxx_dark=0x7f0200db;
        public static final int sym_keyboard_zwj_lxx_light=0x7f0200dc;
        public static final int sym_keyboard_zwnj_holo_dark=0x7f0200dd;
        public static final int sym_keyboard_zwnj_lxx_dark=0x7f0200de;
        public static final int sym_keyboard_zwnj_lxx_light=0x7f0200df;
        public static final int unbundled_check_01=0x7f0200e0;
        public static final int unbundled_check_02=0x7f0200e1;
        public static final int unbundled_earth_01=0x7f0200e2;
        public static final int unbundled_earth_02=0x7f0200e3;
        public static final int unbundled_key_01=0x7f0200e4;
        public static final int unbundled_key_02=0x7f0200e5;
        public static final int unbundled_select_01=0x7f0200e6;
        public static final int unbundled_select_02=0x7f0200e7;
    }
    public static final class fraction {
        public static final int config_center_suggestion_percentile=0x7f090009;
        public static final int config_emoji_keyboard_key_letter_size=0x7f090025;
        /**  Emoji keyboard 
         */
        public static final int config_emoji_keyboard_key_width=0x7f090023;
        public static final int config_emoji_keyboard_row_height=0x7f090024;
        /**  Static threshold for starting gesture detection (keyWidth%/sec) 
         */
        public static final int config_gesture_detect_fast_move_speed_threshold=0x7f090002;
        /**  Distance based threshold values for gesture detection (keyWidth%/sec) 
         */
        public static final int config_gesture_dynamic_distance_threshold_from=0x7f090003;
        public static final int config_gesture_dynamic_distance_threshold_to=0x7f090004;
        public static final int config_gesture_recognition_speed_threshold=0x7f090006;
        /**  Parameter for gesture sampling (keyWidth%/sec) 
         */
        public static final int config_gesture_sampling_minimum_distance=0x7f090005;
        public static final int config_key_hint_label_ratio_holo=0x7f09001a;
        public static final int config_key_hint_label_ratio_lxx=0x7f09001b;
        public static final int config_key_hint_letter_ratio_holo=0x7f090018;
        public static final int config_key_hint_letter_ratio_lxx=0x7f090019;
        public static final int config_key_horizontal_gap_holo=0x7f090010;
        public static final int config_key_label_ratio_holo=0x7f090016;
        public static final int config_key_label_ratio_lxx=0x7f090017;
        public static final int config_key_large_letter_ratio_holo=0x7f090014;
        public static final int config_key_large_letter_ratio_lxx=0x7f090015;
        public static final int config_key_letter_ratio_5row=0x7f090020;
        public static final int config_key_letter_ratio_holo=0x7f090012;
        public static final int config_key_letter_ratio_lxx=0x7f090013;
        public static final int config_key_preview_dismiss_end_scale=0x7f090001;
        public static final int config_key_preview_show_up_start_scale=0x7f090000;
        public static final int config_key_preview_text_ratio=0x7f090011;
        public static final int config_key_shifted_letter_hint_ratio_5row=0x7f090021;
        public static final int config_key_shifted_letter_hint_ratio_holo=0x7f09001c;
        public static final int config_key_shifted_letter_hint_ratio_lxx=0x7f09001d;
        /**  For 5-row keyboard 
         */
        public static final int config_key_vertical_gap_5row=0x7f09001f;
        public static final int config_key_vertical_gap_holo=0x7f09000f;
        public static final int config_keyboard_bottom_padding_holo=0x7f09000e;
        /**  Common keyboard configuration. 
         */
        public static final int config_keyboard_left_padding=0x7f090007;
        public static final int config_keyboard_right_padding=0x7f090008;
        public static final int config_keyboard_top_padding_holo=0x7f09000d;
        public static final int config_language_on_spacebar_text_ratio=0x7f09001e;
        public static final int config_max_keyboard_height=0x7f09000b;
        public static final int config_min_keyboard_height=0x7f09000c;
        public static final int config_min_more_suggestions_width=0x7f090022;
        public static final int config_more_suggestions_info_ratio=0x7f09000a;
    }
    public static final class id {
        public static final int ICS=0x7f0f0003;
        public static final int KLP=0x7f0f0004;
        public static final int LXXDark=0x7f0f0005;
        public static final int LXXLight=0x7f0f0006;
        public static final int action=0x7f0f0007;
        public static final int actionCustomLabel=0x7f0f0041;
        public static final int actionDone=0x7f0f0042;
        public static final int actionGo=0x7f0f0043;
        public static final int actionNext=0x7f0f0044;
        public static final int actionNone=0x7f0f0045;
        public static final int actionPrevious=0x7f0f0046;
        public static final int actionSearch=0x7f0f0047;
        public static final int actionSend=0x7f0f0048;
        public static final int actionUnspecified=0x7f0f0049;
        public static final int alignHintLabelToBottom=0x7f0f0012;
        public static final int alignIconToBottom=0x7f0f0013;
        public static final int alignLabelOffCenter=0x7f0f0014;
        public static final int alphabet=0x7f0f002c;
        public static final int alphabetAutomaticShifted=0x7f0f002d;
        public static final int alphabetManualShifted=0x7f0f002e;
        public static final int alphabetShiftLockShifted=0x7f0f002f;
        public static final int alphabetShiftLocked=0x7f0f0030;
        public static final int altCodeWhileTyping=0x7f0f000e;
        public static final int arabic=0x7f0f004a;
        public static final int armenian=0x7f0f004b;
        public static final int autoCorrectBold=0x7f0f0000;
        public static final int autoCorrectUnderline=0x7f0f0001;
        public static final int autoScale=0x7f0f0015;
        public static final int autoXScale=0x7f0f0016;
        public static final int bengali=0x7f0f004c;
        public static final int bold=0x7f0f0029;
        public static final int boldItalic=0x7f0f002a;
        public static final int container=0x7f0f005c;
        public static final int cyrillic=0x7f0f004d;
        public static final int devanagari=0x7f0f004e;
        public static final int disableAdditionalMoreKeys=0x7f0f0017;
        public static final int disableKeyHintLabel=0x7f0f0018;
        public static final int email=0x7f0f003d;
        public static final int emojiCategory1=0x7f0f0031;
        public static final int emojiCategory2=0x7f0f0032;
        public static final int emojiCategory3=0x7f0f0033;
        public static final int emojiCategory4=0x7f0f0034;
        public static final int emojiCategory5=0x7f0f0035;
        public static final int emojiCategory6=0x7f0f0036;
        public static final int emojiRecents=0x7f0f0037;
        public static final int empty=0x7f0f0008;
        public static final int enableLongPress=0x7f0f000f;
        public static final int fillRight=0x7f0f0028;
        public static final int followFunctionalTextColor=0x7f0f0019;
        public static final int followKeyHintLabelRatio=0x7f0f001a;
        public static final int followKeyLabelRatio=0x7f0f001b;
        public static final int followKeyLargeLetterRatio=0x7f0f001c;
        public static final int followKeyLetterRatio=0x7f0f001d;
        public static final int fontDefault=0x7f0f001e;
        public static final int fontMonoSpace=0x7f0f001f;
        public static final int fontNormal=0x7f0f0020;
        public static final int fromCustomActionLabel=0x7f0f0021;
        public static final int functional=0x7f0f0009;
        public static final int georgian=0x7f0f004f;
        public static final int greek=0x7f0f0050;
        public static final int hasHintLabel=0x7f0f0022;
        public static final int hasPopupHint=0x7f0f0023;
        public static final int hasShiftedLetterHint=0x7f0f0024;
        public static final int hebrew=0x7f0f0051;
        public static final int im=0x7f0f003e;
        public static final int isRepeatable=0x7f0f0010;
        public static final int italic=0x7f0f002b;
        public static final int kannada=0x7f0f0052;
        public static final int keepBackgroundAspectRatio=0x7f0f0025;
        public static final int keyboard_view=0x7f0f005d;
        public static final int khmer=0x7f0f0053;
        public static final int lao=0x7f0f0054;
        public static final int latin=0x7f0f0055;
        public static final int malayalam=0x7f0f0056;
        public static final int more_keys_keyboard_view=0x7f0f005e;
        public static final int myanmar=0x7f0f0057;
        public static final int noKeyPreview=0x7f0f0011;
        public static final int normal=0x7f0f000a;
        public static final int number=0x7f0f0038;
        public static final int phone=0x7f0f0039;
        public static final int phoneSymbols=0x7f0f003a;
        public static final int preserveCase=0x7f0f0026;
        public static final int shiftedLetterActivated=0x7f0f0027;
        public static final int sinhala=0x7f0f0058;
        public static final int spacebar=0x7f0f000b;
        public static final int stickyOff=0x7f0f000c;
        public static final int stickyOn=0x7f0f000d;
        public static final int symbols=0x7f0f003b;
        public static final int symbolsShifted=0x7f0f003c;
        public static final int tamil=0x7f0f0059;
        public static final int telugu=0x7f0f005a;
        public static final int text=0x7f0f003f;
        public static final int thai=0x7f0f005b;
        public static final int url=0x7f0f0040;
        public static final int validTypedWordBold=0x7f0f0002;
    }
    public static final class integer {
        public static final int config_accessibility_long_press_key_timeout=0x7f08000e;
        public static final int config_default_longpress_key_timeout=0x7f08000a;
        public static final int config_delay_in_milliseconds_to_update_old_suggestions=0x7f080025;
        public static final int config_delay_in_milliseconds_to_update_shift_state=0x7f080000;
        public static final int config_delay_in_milliseconds_to_update_suggestions=0x7f080024;
        public static final int config_double_space_period_timeout=0x7f080001;
        public static final int config_emoji_keyboard_max_page_key_count=0x7f08002d;
        /**  Dynamic threshold for gesture after fast typing (msec) 
         */
        public static final int config_gesture_dynamic_threshold_decay_duration=0x7f08001b;
        /**  Time based threshold values for gesture detection (msec) 
         */
        public static final int config_gesture_dynamic_time_threshold_from=0x7f08001c;
        public static final int config_gesture_dynamic_time_threshold_to=0x7f08001d;
        public static final int config_gesture_floating_preview_text_linger_timeout=0x7f080016;
        /**  Parameters for gesture recognition (msec) and (keyWidth%/sec) 
         */
        public static final int config_gesture_recognition_minimum_time=0x7f08001e;
        public static final int config_gesture_recognition_update_time=0x7f08001f;
        /**  Static threshold for gesture after fast typing (msec) 
         */
        public static final int config_gesture_static_time_threshold_after_fast_typing=0x7f08001a;
        /**  Percentages of gesture preview taril body and shadow, in proportion to the trail width.
         A negative value of the shadow ratio disables drawing shadow. 
 TODO: May use the shadow to alleviate rugged trail drawing. 
         */
        public static final int config_gesture_trail_body_ratio=0x7f080028;
        public static final int config_gesture_trail_fadeout_duration=0x7f080018;
        public static final int config_gesture_trail_fadeout_start_delay=0x7f080017;
        /**  Maximum angular threshold between gesture trails interpolation segments in degree. 
         */
        public static final int config_gesture_trail_max_interpolation_angular_threshold=0x7f080026;
        /**  Maximum number of gesture trail interpolation segments. 
         */
        public static final int config_gesture_trail_max_interpolation_segments=0x7f080027;
        public static final int config_gesture_trail_shadow_ratio=0x7f080029;
        public static final int config_gesture_trail_update_interval=0x7f080019;
        public static final int config_ignore_alt_code_key_timeout=0x7f080004;
        public static final int config_key_preview_dismiss_duration=0x7f080006;
        /**  TODO: consolidate key preview linger timeout with the above animation parameters. 
         */
        public static final int config_key_preview_linger_timeout=0x7f080007;
        public static final int config_key_preview_show_up_duration=0x7f080005;
        public static final int config_key_repeat_interval=0x7f080003;
        public static final int config_key_repeat_start_timeout=0x7f080002;
        public static final int config_keyboard_grid_height=0x7f080021;
        public static final int config_keyboard_grid_width=0x7f080020;
        public static final int config_language_on_spacebar_final_alpha=0x7f080015;
        /**  Long pressing shift will invoke caps-lock if > 0, never invoke caps-lock if == 0 
         */
        public static final int config_longpress_shift_lock_timeout=0x7f080012;
        public static final int config_longpress_timeout_step=0x7f08000d;
        public static final int config_max_longpress_timeout=0x7f08000b;
        public static final int config_max_more_keys_column=0x7f08000f;
        public static final int config_max_more_suggestions_row=0x7f08002c;
        public static final int config_max_vibration_duration=0x7f080009;
        public static final int config_min_longpress_timeout=0x7f08000c;
        public static final int config_more_keys_keyboard_fadein_anim_time=0x7f080010;
        public static final int config_more_keys_keyboard_fadeout_anim_time=0x7f080011;
        /**  Personalization configuration 
 -1 means periocical wipe of the personalization dict is disabled. 
         */
        public static final int config_personalization_dict_wipe_interval_in_days=0x7f08002b;
        /**  Percentages of sliding key input preview body and shadow, in proportion to the width.
         A negative value of the shadow ratio disables drawing shadow. 
 TODO: May use the shadow to alleviate rugged trail drawing. 
         */
        public static final int config_sliding_key_input_preview_body_ratio=0x7f080013;
        public static final int config_sliding_key_input_preview_shadow_ratio=0x7f080014;
        /**  Common suggestion strip configuration. 
         */
        public static final int config_suggestions_count_in_strip=0x7f080023;
        /**  Suppress showing key preview duration after batch input in millisecond 
         */
        public static final int config_suppress_key_preview_after_batch_input_duration=0x7f080008;
        public static final int config_touch_noise_threshold_time=0x7f080022;
        public static final int config_user_dictionary_max_word_length=0x7f08002a;
    }
    public static final class layout {
        public static final int activity_settings=0x7f030000;
        public static final int fragment_settings=0x7f030001;
        public static final int main_keyboard_frame=0x7f030002;
        public static final int more_keys_keyboard=0x7f030003;
        public static final int more_keys_keyboard_for_action_lxx=0x7f030004;
    }
    public static final class menu {
        public static final int settings=0x7f0e0000;
    }
    public static final class string {
        /**  Units abbreviation for the duration (milliseconds) [CHAR LIMIT=10] 
         */
        public static final int abbreviation_unit_milliseconds=0x7f0b001d;
        /**  Title of the button to add custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int add=0x7f0b0060;
        /**  Title of the option menu to add a new style entry in the preference settings [CHAR LIMIT=16] 
         */
        public static final int add_style=0x7f0b005f;
        /**  The dictionary provider application name. Visible in Settings/Applications/Manage applications. 
         */
        public static final int app_name=0x7f0b0081;
        /**  Option to enable auto capitalization of sentences 
         */
        public static final int auto_cap=0x7f0b0025;
        /**  Description for option to enable auto capitalization of sentences 
         */
        public static final int auto_cap_summary=0x7f0b0026;
        /**  Option to decide the auto correction threshold score 
 Option to enable auto correction [CHAR LIMIT=20]
         */
        public static final int auto_correction=0x7f0b002e;
        /**  Description for auto correction [CHAR LIMIT=65 (two lines) or 30 (fits on one line, preferable)] 
         */
        public static final int auto_correction_summary=0x7f0b002f;
        /**  Option to suggest auto correction suggestions aggressively. Auto-corrects to a word which has even large edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_aggressive=0x7f0b0032;
        /**  Option to suggest auto correction suggestions modestly. Auto-corrects only to a word which has small edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_modest=0x7f0b0031;
        /**  Option to disable auto correction. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_off=0x7f0b0030;
        /**  Option to suggest auto correction suggestions very aggressively. Auto-corrects to a word which has even large edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_very_aggressive=0x7f0b0033;
        /**  Option to enable using next word suggestions. After the user types a space, with this option on, the keyboard will try to predict the next word. 
         */
        public static final int bigram_prediction=0x7f0b0034;
        /**  Description for "next word suggestion" option. This displays suggestions even when there is no input, based on the previous word. 
         */
        public static final int bigram_prediction_summary=0x7f0b0035;
        /**  Title of the button to revert to the default value of the device in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int button_default=0x7f0b006b;
        /**  Standard message to dismiss a dialog box 
         */
        public static final int cancel=0x7f0b0095;
        /**  Action to cancel the ongoing download of a dictionary file [CHAR_LIMIT=25] 
         */
        public static final int cancel_download_dict=0x7f0b0098;
        /**  Message to display in the dictionaries setting screen when some error prevented us to list installed dictionaries [CHAR LIMIT=20] 
         */
        public static final int cannot_connect_to_dict_service=0x7f0b008e;
        /**  Title of the options to press to refresh the list (as in, check for updates now) [CHAR_LIMIT=50] 
         */
        public static final int check_for_updates_now=0x7f0b0090;
        /**  Option to configure dictionaries 
         */
        public static final int configure_dictionaries_title=0x7f0b0028;
        /**  Title for configuring input method settings [CHAR LIMIT=35] 
         */
        public static final int configure_input_method=0x7f0b003f;
        /**  Toast text to describe the same input style already exists [CHAR LIMIT=64]
         */
        public static final int custom_input_style_already_exists=0x7f0b0068;
        /**  The message of the dialog to note that a custom input style needs to be enabled. [CHAR LIMIT=130] 
         */
        public static final int custom_input_style_note_message=0x7f0b0065;
        /**  Title of the preference settings for custom input styles (language and keyboard layout pairs) [CHAR LIMIT=35]
         */
        public static final int custom_input_styles_title=0x7f0b005e;
        /**  Name for the "user dictionary" preference item when there is only one 
         */
        public static final int default_user_dict_pref_name=0x7f0b0089;
        /**  Action to delete a dictionary file [CHAR_LIMIT=15] 
         */
        public static final int delete_dict=0x7f0b0099;
        /**  The small subtext in the "dictionary available" notification. 
         */
        public static final int dict_available_notification_description=0x7f0b009e;
        /**  The text of the "dictionary available" notification. 
         */
        public static final int dict_available_notification_title=0x7f0b009d;
        /**  Message about some dictionary indicating it can be downloaded, but hasn't been yet 
         */
        public static final int dictionary_available=0x7f0b008a;
        /**  Message about some dictionary indicating the file is installed, but the dictionary is disabled 
         */
        public static final int dictionary_disabled=0x7f0b008d;
        /**  Message about some dictionary indicating it is downloading and should be available soon 
         */
        public static final int dictionary_downloading=0x7f0b008b;
        /**  Title for the prompt dialog which informs the user that a dictionary is available for the current language and asks to decide whether to download it over 3g 
         */
        public static final int dictionary_install_over_metered_network_prompt=0x7f0b0086;
        /**  Message about some dictionary indicating it is already installed 
         */
        public static final int dictionary_installed=0x7f0b008c;
        /**  The dictionary provider ContentProvider name. Visible in Settings/Applications/Running services. 
         */
        public static final int dictionary_provider_name=0x7f0b0082;
        /**  The dictionary provider Service name. Visible in Settings/Applications/Running services. 
         */
        public static final int dictionary_service_name=0x7f0b0083;
        public static final int dictionary_settings_summary=0x7f0b0087;
        /**  Title and summary of the dictionary settings screen 
         */
        public static final int dictionary_settings_title=0x7f0b0085;
        public static final int do_not_download_over_metered=0x7f0b009c;
        /**  Downloadable dictionaries will get update information through the network. This describes the associated download. 
         */
        public static final int download_description=0x7f0b0084;
        public static final int download_over_metered=0x7f0b009b;
        /**  Option to edit personal dictionary. [CHAR_LIMIT=30]
         */
        public static final int edit_personal_dictionary=0x7f0b0027;
        /**  Title of the button to enable a custom input style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int enable=0x7f0b0066;
        /**  Option to enable sending usage statistics 
         */
        public static final int enable_metrics_logging=0x7f0b0022;
        /**  Title for CarloZ keyboard input options dialog [CHAR LIMIT=25] 
         */
        public static final int english_ime_input_options=0x7f0b0009;
        /**  Option to enable gesture floating text preview. The user can see a suggested word floating under the moving finger during a gesture input. [CHAR LIMIT=30]
         */
        public static final int gesture_floating_preview_text=0x7f0b0039;
        /**  Description for "gesture_floating_preview_text" option. The user can see a suggested word floating under the moving finger during a gesture input. [CHAR LIMIT=65]
         */
        public static final int gesture_floating_preview_text_summary=0x7f0b003a;
        /**  Option to enable gesture input. The user can input a word by tracing the letters of a word without releasing the finger from the screen. [CHAR LIMIT=30]
         */
        public static final int gesture_input=0x7f0b0036;
        /**  Description for "gesture_input" option. The user can input a word by tracing the letters of a word without releasing the finger from the screen. [CHAR LIMIT=65]
         */
        public static final int gesture_input_summary=0x7f0b0037;
        /**  Option to enable gesture trail preview. The user can see a trail of the gesture during gesture input. [CHAR LIMIT=30]
         */
        public static final int gesture_preview_trail=0x7f0b0038;
        /**  Option to enable space aware gesture input. The user can input multiple words by gliding through the space key during a gesture input. [CHAR LIMIT=30]
         */
        public static final int gesture_space_aware=0x7f0b003b;
        /**  Description for "gesture_space_aware" option. The user can input multiple words by gliding through the space key during a gesture input.[CHAR LIMIT=65]
         */
        public static final int gesture_space_aware_summary=0x7f0b003c;
        /**  Title of the button in a dialog box. The button takes the user to the keyboard settings. [CHAR LIMIT=15] 
         */
        public static final int go_to_settings=0x7f0b0096;
        /**  Inform the user that a particular language has an available dictionary 
         */
        public static final int has_dictionary=0x7f0b0045;
        /**  Title for the 'Help & feedback' settings fragment which shows a help page and has a button
         for submitting feedback. [CHAR LIMIT=35] 
         */
        public static final int help_and_feedback=0x7f0b0041;
        /**  Add to dictionary hint 
         */
        public static final int hint_add_to_dictionary=0x7f0b0043;
        /**  Add to dictionary hint 
         */
        public static final int hint_add_to_dictionary_without_word=0x7f0b0044;
        /**  Option name for including other IMEs in the language switch list [CHAR LIMIT=30] 
         */
        public static final int include_other_imes_in_language_switch_list=0x7f0b0016;
        /**  Option summary for including other IMEs in the language switch list [CHAR LIMIT=65] 
         */
        public static final int include_other_imes_in_language_switch_list_summary=0x7f0b0017;
        /**  Action to download and install a dictionary [CHAR_LIMIT=15] 
         */
        public static final int install_dict=0x7f0b0097;
        /**  Description for delay for dismissing a popup on screen: default value of the delay [CHAR LIMIT=15] 
         */
        public static final int key_preview_popup_dismiss_default_delay=0x7f0b001c;
        /**  Option for the dismiss delay of the key popup [CHAR LIMIT=25] 
         */
        public static final int key_preview_popup_dismiss_delay=0x7f0b001a;
        /**  Description for delay for dismissing a popup on keypress: no delay [CHAR LIMIT=15] 
         */
        public static final int key_preview_popup_dismiss_no_delay=0x7f0b001b;
        /**  Title of the item to change the keyboard theme [CHAR LIMIT=20]
         */
        public static final int keyboard_layout=0x7f0b0046;
        /**  Title of the spinner for choosing a keyboard layout of custom style in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int keyboard_layout_set=0x7f0b0064;
        /**  Title of the preference settings for switching keyboard theme [CHAR LIMIT=35] 
         */
        public static final int keyboard_theme=0x7f0b0059;
        /**  The keyboard theme name, Holo Blue. This is marked as translatable="false" because this is a proper name of system-wide UI Theme.  
         */
        public static final int keyboard_theme_holo_blue=0x7f0b005b;
        /**  The keyboard theme name, Holo White. This is marked as translatable="false" because this is a proper name of system-wide UI Theme. 
         */
        public static final int keyboard_theme_holo_white=0x7f0b005a;
        /**  The keyboard theme name, Material Dark. This is marked as translatable="false" because this is a proper name of system-wide UI Theme.  
         */
        public static final int keyboard_theme_material_dark=0x7f0b005c;
        /**  The keyboard theme name, Material Light. This is marked as translatable="false" because this is a proper name of system-wide UI Theme.  
         */
        public static final int keyboard_theme_material_light=0x7f0b005d;
        /**  Title for input language selection screen 
         */
        public static final int language_selection_title=0x7f0b0040;
        /**  Hint to tell when the data was last updated. Usage : "Last updated [date]", may contain a : or so. [CHAR LIMIT=45] 
         */
        public static final int last_update=0x7f0b0091;
        /**  String to explain this dictionary is the main dictionary for this language [CHAR_LIMIT=30] 
         */
        public static final int main_dict_description=0x7f0b0094;
        /**  Name of the main dictionary, as opposed to auxiliary dictionaries (medical/entertainment/sports...) 
         */
        public static final int main_dictionary=0x7f0b0029;
        /**  Message to display while the add-on dictionary list is updating [no space constraints on this, there is plenty of space but shorter is better because it's only on the screen for a second] 
         */
        public static final int message_loading=0x7f0b0093;
        /**  Message to display in a dialog box while we are actively updating the word list [CHAR LIMIT=60] 
         */
        public static final int message_updating=0x7f0b0092;
        /**  Message to display in the dictionaries setting screen when we found that no dictionaries are available [CHAR LIMIT=20]
         */
        public static final int no_dictionaries_available=0x7f0b008f;
        /**  Title of the button to postpone enabling a custom input style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int not_now=0x7f0b0067;
        /**  Option to control whether or not to show a popup with a larger font on each key press. 
         */
        public static final int popup_on_keypress=0x7f0b000e;
        /**  Summary for option to block potentially offensive words to be shown [CHAR_LIMIT=80 (two lines) or 40 (fits on one line, preferable)] 
         */
        public static final int prefs_block_potentially_offensive_summary=0x7f0b002d;
        /**  Option to block potentially offensive words to be shown [CHAR_LIMIT=30] 
         */
        public static final int prefs_block_potentially_offensive_title=0x7f0b002c;
        /**  Title of the settings for keypress sound volume [CHAR LIMIT=35] 
         */
        public static final int prefs_keypress_sound_volume_settings=0x7f0b006a;
        /**  Title of the settings for keypress vibration duration [CHAR LIMIT=35] 
         */
        public static final int prefs_keypress_vibration_duration_settings=0x7f0b0069;
        /**  Option to enable showing suggestions 
         */
        public static final int prefs_show_suggestions=0x7f0b002a;
        /**  Description for show suggestions 
         */
        public static final int prefs_show_suggestions_summary=0x7f0b002b;
        /**  Title of the button to remove a custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int remove=0x7f0b0061;
        /**  Title of the button to save a custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int save=0x7f0b0062;
        /**  Preference for input language selection 
         */
        public static final int select_language=0x7f0b0042;
        /**  Settings screen title for advanced settings [CHAR LIMIT=33] 
         */
        public static final int settings_screen_advanced=0x7f0b0014;
        /**  Settings screen title for appearance & layouts preferences [CHAR LIMIT=33] 
         */
        public static final int settings_screen_appearance=0x7f0b0010;
        /**  Settings screen title for text correction options [CHAR_LIMIT=33] 
         */
        public static final int settings_screen_correction=0x7f0b0013;
        /**  Settings screen title for gesture typing preferences [CHAR_LIMIT=33] 
         */
        public static final int settings_screen_gesture=0x7f0b0012;
        /**  Settings screen title for multilingual options [CHAR_LIMIT=33] 
         */
        public static final int settings_screen_multilingual=0x7f0b0011;
        /**  Settings screen title for preferences [CHAR LIMIT=33]
         */
        public static final int settings_screen_preferences=0x7f0b000f;
        /**  Settings screen title for keyboard theme settings [CHAR LIMIT=33] 
         */
        public static final int settings_screen_theme=0x7f0b0015;
        /**  The text that represents the current settings value is the system default [CHAR LIMIT=25] 
         */
        public static final int settings_system_default=0x7f0b001e;
        /**  The label of the button that finishes the setup wizard. [CHAR_LIMIT=64] 
         */
        public static final int setup_finish_action=0x7f0b007e;
        /**  The label of the button that navigates the user to the next step of the setup wizard. [CHAR_LIMIT=64] 
         */
        public static final int setup_next_action=0x7f0b006f;
        /**  The label of the button that starts the setup wizard. [CHAR_LIMIT=64] 
         */
        public static final int setup_start_action=0x7f0b006e;
        /**  The label of the button that triggers the Language & input settings in order to enable the keyboard. [CHAR_LIMIT=64] 
         */
        public static final int setup_step1_action=0x7f0b0075;
        /**  Ordinal number of the 1st step in the setup wizard. [CHAR LIMIT=5] 
         */
        public static final int setup_step1_bullet=0x7f0b0071;
        /**  Detailed instruction of the already finished 1st step in the setup wizard. [CHAR LIMIT=120] 
         */
        public static final int setup_step1_finished_instruction=0x7f0b0074;
        /**  Detailed instruction of the 1st step in the setup wizard. [CHAR LIMIT=120] 
         */
        public static final int setup_step1_instruction=0x7f0b0073;
        /**  Title of the 1st step in the setup wizard. [CHAR LIMIT=64] 
         */
        public static final int setup_step1_title=0x7f0b0072;
        /**  The label of the button that triggers the choose input method dialog in order to select the keyboard. [CHAR_LIMIT=64] 
         */
        public static final int setup_step2_action=0x7f0b0079;
        /**  Ordinal number of the 2nd step in the setup wizard. [CHAR LIMIT=5] 
         */
        public static final int setup_step2_bullet=0x7f0b0076;
        /**  Detailed instruction of the 2nd step in the setup wizard. [CHAR LIMIT=120] 
         */
        public static final int setup_step2_instruction=0x7f0b0078;
        /**  Title of the 2nd step in the setup wizard. [CHAR LIMIT=64] 
         */
        public static final int setup_step2_title=0x7f0b0077;
        /**  The label of the button that triggers the screen for configuaring additional languages of the keyboard. [CHAR_LIMIT=64] 
         */
        public static final int setup_step3_action=0x7f0b007d;
        /**  Ordinal number of the 3rd step in the setup wizard. [CHAR LIMIT=5] 
         */
        public static final int setup_step3_bullet=0x7f0b007a;
        /**  Detailed instruction of the 3rd step in the setup wizard. [CHAR LIMIT=120] 
         */
        public static final int setup_step3_instruction=0x7f0b007c;
        /**  Title of the 3rd step in the setup wizard. [CHAR LIMIT=64] 
         */
        public static final int setup_step3_title=0x7f0b007b;
        /**  Title of the setup wizard. [CHAR LIMT=40] 
         */
        public static final int setup_steps_title=0x7f0b0070;
        /**  Additional title of the setup wizard welcome screen, just below the setup_welcome_title. [CHAR_LIMIT=64] 
         */
        public static final int setup_welcome_additional_description=0x7f0b006d;
        /**  Title of the setup wizard welcome screen. [CHAR LIMT=40] 
         */
        public static final int setup_welcome_title=0x7f0b006c;
        /**  Message in the popup informing the user a dictionary is available for their language, and asking for a decision to download over their mobile data plan or not. The reason we ask for this is, the data is large and may be downloaded over a paid-per-megabyte connection but a dictionary is also essential to type comfortably, so we ask the user. This only pops in selected cases, when there is no dictionary at all currently, and the only available network seems to be metered. The "Language & input" part should be set to the actual name of the option (message ID 5292716747264442359 in the translation console). [CHAR_LIMIT=700] 
         */
        public static final int should_download_over_metered_prompt=0x7f0b009a;
        /**  Option to show language switch key [CHAR LIMIT=30] 
         */
        public static final int show_language_switch_key=0x7f0b0018;
        /**  Option summary for showing language switch key [CHAR LIMIT=65] 
         */
        public static final int show_language_switch_key_summary=0x7f0b0019;
        /**  Option to show setup wizard icon. [CHAR LIMIT=30]
         */
        public static final int show_setup_wizard_icon=0x7f0b007f;
        /**  Description for the option to show setup wizard application icon of this IME in the laucher. [CHAR_LIMIT=65] 
         */
        public static final int show_setup_wizard_icon_summary=0x7f0b0080;
        /**  Option to play back sound on keypress in soft keyboard 
         */
        public static final int sound_on_keypress=0x7f0b000d;
        /**  Description for Bulgarian (BDS) subtype. 
         */
        public static final int subtype_bulgarian_bds=0x7f0b0008;
        /**  Description for Emoji keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_emoji=0x7f0b0058;
        /**  Description for English (UK) keyboard subtype [CHAR LIMIT=25]
         (UK) should be an abbreviation of United Kingdom to fit in the CHAR LIMIT. 
         */
        public static final int subtype_en_GB=0x7f0b0047;
        /**  Description for English (US) keyboard subtype [CHAR LIMIT=25]
         (US) should be an abbreviation of United States to fit in the CHAR LIMIT. 
         */
        public static final int subtype_en_US=0x7f0b0048;
        /**  Description for Spanish (US) keyboard subtype [CHAR LIMIT=25]
         (US) should be an abbreviation of United States to fit in the CHAR LIMIT. 
         */
        public static final int subtype_es_US=0x7f0b0049;
        /**  Generic subtype label 
         */
        public static final int subtype_generic=0x7f0b0001;
        public static final int subtype_generic_azerty=0x7f0b0004;
        public static final int subtype_generic_colemak=0x7f0b0006;
        /**  Description for "LANGUAGE_NAME" (Compact) keyboard subtype [CHAR LIMIT=25]
         (Compact) can be an abbreviation to fit in the CHAR LIMIT.
         TODO: Remove translatable=false once we are settled down with the naming. 
         */
        public static final int subtype_generic_compact=0x7f0b004e;
        /**  Description for "LANGUAGE_NAME" (Cyrillic) keyboard subtype [CHAR LIMIT=25]
         (Cyrillic) can be an abbreviation to fit in the CHAR LIMIT. 
         */
        public static final int subtype_generic_cyrillic=0x7f0b004f;
        public static final int subtype_generic_dvorak=0x7f0b0005;
        /**  Description for "LANGUAGE_NAME" (CarloZ) keyboard subtype [CHAR LIMIT=25]
         (CarloZ) can be an abbreviation to fit in the CHAR LIMIT. 
         */
        public static final int subtype_generic_latin=0x7f0b0050;
        public static final int subtype_generic_pcqwerty=0x7f0b0007;
        /**  Description for generic subtype that has predefined layout.
         The string resource name must be "subtype_generic_<layout name>".
         The string resource with "No language" also must be added to strings.xml and the resource
         name must be "subtype_no_language_<layout name>" 
         */
        public static final int subtype_generic_qwerty=0x7f0b0002;
        public static final int subtype_generic_qwertz=0x7f0b0003;
        /**  Description for "LANGUAGE_NAME" (Traditional) keyboard subtype [CHAR LIMIT=25]
         (Traditional) can be an abbreviation to fit in the CHAR LIMIT. 
         */
        public static final int subtype_generic_traditional=0x7f0b004d;
        /**  Title of the spinner for choosing a language of custom style in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int subtype_locale=0x7f0b0063;
        /**  This string is displayed in a language list that allows to choose a language for
suggestions in a software keyboard. This setting won't give suggestions in any particular
language, hence "No language".
As for the "alphabet" mention, it refers specifically to the CarloZ alphabet, as opposed to
Cyrillic, Arabic, Hebrew or other scripts. This keyboard offers no suggestions, but it will
be a QWERTY, or AZERTY, or any other disposition that only offers CarloZ characters, so
you wouldn't be able to type, say, Arabic on it. Please translate it in a way that "alphabet"
would be understood to mean specifically the CarloZ alphabet, rather than any other
alphabet. [CHAR LIMIT=29] 
         */
        public static final int subtype_no_language=0x7f0b0051;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the CarloZ alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the CarloZ alphabet, the
user still needs a keyboard that can input CarloZ characters for passwords or login names for
example, and a way to switch to this CarloZ alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter CarloZ characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the CarloZ alphabet. This keyboard is laid out in the AZERTY
disposition rather than other common dispositions for CarloZ languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_azerty=0x7f0b0054;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the CarloZ alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the CarloZ alphabet, the
user still needs a keyboard that can input CarloZ characters for passwords or login names for
example, and a way to switch to this CarloZ alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter CarloZ characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the CarloZ alphabet. This keyboard is laid out in the Colemak
disposition rather than other common dispositions for CarloZ languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_colemak=0x7f0b0056;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the CarloZ alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the CarloZ alphabet, the
user still needs a keyboard that can input CarloZ characters for passwords or login names for
example, and a way to switch to this CarloZ alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter CarloZ characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the CarloZ alphabet. This keyboard is laid out in the Dvorak
disposition rather than other common dispositions for CarloZ languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_dvorak=0x7f0b0055;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the CarloZ alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the CarloZ alphabet, the
user still needs a keyboard that can input CarloZ characters for passwords or login names for
example, and a way to switch to this CarloZ alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter CarloZ characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the CarloZ alphabet. This keyboard is laid out in the QWERTY PC
disposition that offers additional keys, but smaller keys compared to other common dispositions for
mobile devices. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_pcqwerty=0x7f0b0057;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the CarloZ alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the CarloZ alphabet, the
user still needs a keyboard that can input CarloZ characters for passwords or login names for
example, and a way to switch to this CarloZ alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter CarloZ characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the CarloZ alphabet. This keyboard is laid out in the QWERTY
disposition rather than other common dispositions for CarloZ languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_qwerty=0x7f0b0052;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the CarloZ alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the CarloZ alphabet, the
user still needs a keyboard that can input CarloZ characters for passwords or login names for
example, and a way to switch to this CarloZ alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter CarloZ characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the CarloZ alphabet. This keyboard is laid out in the QWERTZ
disposition rather than other common dispositions for CarloZ languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_qwertz=0x7f0b0053;
        /**  Description for English (UK) keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         (UK) should be an abbreviation of United Kingdom to fit in the CHAR LIMIT.
         This should be identical to subtype_en_GB aside from the trailing (%s). 
         */
        public static final int subtype_with_layout_en_GB=0x7f0b004a;
        /**  Description for English (US) keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         (US) should be an abbreviation of United States to fit in the CHAR LIMIT.
         This should be identical to subtype_en_US aside from the trailing (%s). 
         */
        public static final int subtype_with_layout_en_US=0x7f0b004b;
        /**  Description for Spanish (US) keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         (US) should be an abbreviation of United Statesn to fit in the CHAR LIMIT.
         This should be identical to subtype_es_US aside from the trailing (%s). 
         */
        public static final int subtype_with_layout_es_US=0x7f0b004c;
        /**  The text of the toast warning a download is starting automatically to enable suggestions for the selected language [CHAR LIMIT=100] 
         */
        public static final int toast_downloading_suggestions=0x7f0b009f;
        /**  Option name for enabling or disabling the use of names of people in Contacts for suggestion and correction [CHAR LIMIT=25] 
         */
        public static final int use_contacts_dict=0x7f0b001f;
        /**  Description for option enabling or disabling the use of names of people in Contacts for suggestion and correction [CHAR LIMIT=65] 
         */
        public static final int use_contacts_dict_summary=0x7f0b0020;
        /**  Description for the spell checker option to turn on/off contact names lookup. [CHAR LIMIT=65] 
         */
        public static final int use_contacts_for_spellchecking_option_summary=0x7f0b000b;
        /**  Title for the spell checker option to turn on/off contact names lookup [CHAR LIMIT=25] 
         */
        public static final int use_contacts_for_spellchecking_option_title=0x7f0b000a;
        /**  Option name for enabling or disabling the double-space period feature that lets double tap on spacebar insert a period followed by a space [CHAR LIMIT=30] 
         */
        public static final int use_double_space_period=0x7f0b0023;
        /**  Description for option enabling or disabling the double-space period feature that lets double tap on spacebar insert a period followed by a space [CHAR LIMIT=65] 
         */
        public static final int use_double_space_period_summary=0x7f0b0024;
        /**  Option name for enabling the use by the keyboards of sent/received messages, e-mail and typing history to improve suggestion accuracy [CHAR LIMIT=25] 
         */
        public static final int use_personalized_dicts=0x7f0b0021;
        /**  User dictionary settings. Index of the user dictionary [CHAR LIMIT=30]
         This resource is copied from packages/apps/Settings/res/values/strings.xml 
 This resource is corresponding to msgid="5433275485499039199" 
         */
        public static final int user_dict_fast_scroll_alphabet=0x7f0b00b4;
        /**  User dictionary settings. Text on the dialog button to confirm adding a word. [CHAR LIMIT=15] 
 This resource is corresponding to msgid="6225823625332416144" 
         */
        public static final int user_dict_settings_add_dialog_confirm=0x7f0b00a7;
        /**  User dictionary settings. Text on the dialog button mask advanced options. [CHAR LIMIT=15] 
 This resource is corresponding to msgid="2441785268726036101" 
         */
        public static final int user_dict_settings_add_dialog_less_options=0x7f0b00a6;
        /**  User dictionary settings. Text on the dialog button to pop more options for adding a word. [CHAR LIMIT=16] 
 This resource is corresponding to msgid="8848798370746019825" 
         */
        public static final int user_dict_settings_add_dialog_more_options=0x7f0b00a5;
        /**  User dictionary settings. The title of the dialog to add a new word to the user dictionary. [CHAR LIMIT=25] 
 This resource is corresponding to msgid="4702613990174126482" 
         */
        public static final int user_dict_settings_add_dialog_title=0x7f0b00a3;
        /**  User dictionary settings. Label to put before the language field. [CHAR LIMIT=20] 
 This resource is corresponding to msgid="5696358317061318532" 
         */
        public static final int user_dict_settings_add_locale_option_name=0x7f0b00aa;
        /**  User dictionary settings. The title of the menu item to add a new word to the user dictionary. 
 This resource is corresponding to  msgid="4056762757149923551" 
         */
        public static final int user_dict_settings_add_menu_title=0x7f0b00a2;
        /**  User dictionary settings. The title of the screen to add/edit a new word to the user dictionary; it describes the phrase that will be added to the user dictionary. [CHAR LIMIT=25] 
 This resource is corresponding to msgid="742580720124344291" 
         */
        public static final int user_dict_settings_add_screen_title=0x7f0b00a4;
        /**  User dictionary settings. Hint for the text field to type the optional shortcut to add to the user dictionary. [CHAR LIMIT=35] 
 This resource is corresponding to msgid="7333763456561873445" 
         */
        public static final int user_dict_settings_add_shortcut_hint=0x7f0b00ac;
        /**  User dictionary settings. Label to put before the shortcut field (once a shortcut is registered, the user can type the shortcut and get the word it points to in the suggestions). [CHAR LIMIT=20] 
 This resource is corresponding to msgid="660089258866063925" 
         */
        public static final int user_dict_settings_add_shortcut_option_name=0x7f0b00a9;
        /**  User dictionary settings. Hint for the text field to type the word to add to the user dictionary. [CHAR LIMIT=35] 
 This resource is corresponding to msgid="5725254076556821247" 
         */
        public static final int user_dict_settings_add_word_hint=0x7f0b00ab;
        /**  User dictionary settings. Label to put before the word field (that's the word that will actually be added to the user dictionary when OK is pressed). [CHAR LIMIT=20] 
 This resource is corresponding to msgid="7868879174905963135" 
         */
        public static final int user_dict_settings_add_word_option_name=0x7f0b00a8;
        /**  User dictionary settings. The list item to choose to insert a word into the user dictionary for all languages 
 This resource is corresponding to msgid="6742000040975959247" 
         */
        public static final int user_dict_settings_all_languages=0x7f0b00b1;
        /**  User dictionary settings. The title of the context menu item to delete the current word 
 This resource is corresponding to msgid="9140703913776549054" 
         */
        public static final int user_dict_settings_context_menu_delete_title=0x7f0b00af;
        /**  User dictionary settings. The title of the context menu item to edit the current word 
 This resource is corresponding to msgid="2210564879320004837" 
         */
        public static final int user_dict_settings_context_menu_edit_title=0x7f0b00ae;
        /**  User dictionary settings. Label to delete an entry in the user dictionary [CHAR LIMIT=30]
         This resource is copied from packages/apps/Settings/res/values/strings.xml 
 This resource is corresponding to msgid="4219243412325163003" 
         */
        public static final int user_dict_settings_delete=0x7f0b00b3;
        /**  User dictionary settings. The title of the dialog to edit an existing word in the user dictionary. 
 This resource is corresponding to msgid="8967476444840548674" 
         */
        public static final int user_dict_settings_edit_dialog_title=0x7f0b00ad;
        /**  User dictionary settings. The text to show when there are no user-defined words in the dictionary  [CHAR LIMIT=200] 
 This resource is corresponding to msgid="8165273379942105271" 
         */
        public static final int user_dict_settings_empty_text=0x7f0b00b0;
        /**  User dictionary settings. The text to show for the option that shows the entire list of supported locales to choose one [CHAR LIMIT=30] 
 This resource is corresponding to msgid="7316375944684977910" 
         */
        public static final int user_dict_settings_more_languages=0x7f0b00b2;
        /**  User dictionary settings 
 User dictionary settings.  The summary of the listem item to go into the User dictionary settings screen. 
         */
        public static final int user_dict_settings_summary=0x7f0b00a1;
        /**  Name of the user dictionaries settings category 
         */
        public static final int user_dictionaries=0x7f0b0088;
        /**  Version text [CHAR LIMIT=30]
         */
        public static final int version_text=0x7f0b00a0;
        /**  Option to provide vibrate/haptic feedback on keypress 
         */
        public static final int vibrate_on_keypress=0x7f0b000c;
        /**  Preferences item for enabling speech input 
         */
        public static final int voice_input=0x7f0b003d;
        /**  The summary text to describe the reason why the "Voice input key" option is disabled. [CHAR LIMIT=100] 
         */
        public static final int voice_input_disabled_summary=0x7f0b003e;
        /**  For backward compatibility.
         See {@link SettingsValues#needsToShowVoiceInputKey(SharedPreferences,Resources)} 
         */
        public static final int voice_mode_main=0x7f0b0000;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f0d0003;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0d0004;
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView=0x7f0d0009;
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView_ICS=0x7f0d0013;
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView_KLP=0x7f0d001c;
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView_LXX_Dark=0x7f0d0025;
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView_LXX_Light=0x7f0d002f;
        /**  Default theme values 
         */
        public static final int Keyboard=0x7f0d0006;
        public static final int Keyboard_ICS=0x7f0d0010;
        public static final int Keyboard_KLP=0x7f0d0019;
        public static final int Keyboard_LXX_Dark=0x7f0d0022;
        public static final int Keyboard_LXX_Light=0x7f0d002c;
        public static final int KeyboardIcons=0x7f0d0005;
        public static final int KeyboardIcons_Holo=0x7f0d0000;
        public static final int KeyboardIcons_LXX_Dark=0x7f0d0001;
        public static final int KeyboardIcons_LXX_Light=0x7f0d0002;
        public static final int KeyboardTheme_ICS=0x7f0d000f;
        public static final int KeyboardTheme_KLP=0x7f0d0018;
        public static final int KeyboardTheme_LXX_Dark=0x7f0d0021;
        public static final int KeyboardTheme_LXX_Light=0x7f0d002b;
        public static final int KeyboardView=0x7f0d0007;
        /**  Holo KeyboardView theme (ICS and KLP) 
         */
        public static final int KeyboardView_Holo=0x7f0d000e;
        public static final int KeyboardView_ICS=0x7f0d0011;
        public static final int KeyboardView_KLP=0x7f0d001a;
        /**  LXX KeyboardView theme (LXX_Light and LXX_Dark) 
         */
        public static final int KeyboardView_LXX=0x7f0d0035;
        public static final int KeyboardView_LXX_Dark=0x7f0d0023;
        public static final int KeyboardView_LXX_Light=0x7f0d002d;
        public static final int MainKeyboardView=0x7f0d0008;
        public static final int MainKeyboardView_ICS=0x7f0d0012;
        public static final int MainKeyboardView_KLP=0x7f0d001b;
        public static final int MainKeyboardView_LXX_Dark=0x7f0d0024;
        public static final int MainKeyboardView_LXX_Light=0x7f0d002e;
        public static final int MoreKeysKeyboard=0x7f0d000a;
        public static final int MoreKeysKeyboard_ICS=0x7f0d0014;
        public static final int MoreKeysKeyboard_KLP=0x7f0d001d;
        public static final int MoreKeysKeyboard_LXX_Dark=0x7f0d0026;
        public static final int MoreKeysKeyboard_LXX_Light=0x7f0d0030;
        public static final int MoreKeysKeyboardView=0x7f0d000b;
        public static final int MoreKeysKeyboardView_ICS=0x7f0d0015;
        public static final int MoreKeysKeyboardView_KLP=0x7f0d001e;
        public static final int MoreKeysKeyboardView_LXX_Dark=0x7f0d0027;
        public static final int MoreKeysKeyboardView_LXX_Dark_Action=0x7f0d0028;
        public static final int MoreKeysKeyboardView_LXX_Light=0x7f0d0031;
        public static final int MoreKeysKeyboardView_LXX_Light_Action=0x7f0d0032;
        public static final int SuggestionStripView=0x7f0d000c;
        public static final int SuggestionStripView_ICS=0x7f0d0016;
        public static final int SuggestionStripView_KLP=0x7f0d001f;
        public static final int SuggestionStripView_LXX_Dark=0x7f0d0029;
        public static final int SuggestionStripView_LXX_Light=0x7f0d0033;
        public static final int SuggestionWord=0x7f0d000d;
        public static final int SuggestionWord_ICS=0x7f0d0017;
        public static final int SuggestionWord_KLP=0x7f0d0020;
        public static final int SuggestionWord_LXX_Dark=0x7f0d002a;
        public static final int SuggestionWord_LXX_Light=0x7f0d0034;
    }
    public static final class xml {
        public static final int kbd_more_keys_keyboard_template=0x7f050000;
        public static final int kbd_number=0x7f050001;
        public static final int key_styles_number=0x7f050002;
        public static final int keyboard_layout_set_qwerty=0x7f050003;
        public static final int method=0x7f050004;
        public static final int rows_number=0x7f050005;
    }
    public static final class styleable {
        /** Attributes that can be used with a EmojiPalettesView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #EmojiPalettesView_categoryIndicatorBackground com.carloz.inputmethod:categoryIndicatorBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_categoryIndicatorDrawable com.carloz.inputmethod:categoryIndicatorDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_categoryIndicatorEnabled com.carloz.inputmethod:categoryIndicatorEnabled}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_categoryPageIndicatorBackground com.carloz.inputmethod:categoryPageIndicatorBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_categoryPageIndicatorColor com.carloz.inputmethod:categoryPageIndicatorColor}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_iconEmojiCategory1Tab com.carloz.inputmethod:iconEmojiCategory1Tab}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_iconEmojiCategory2Tab com.carloz.inputmethod:iconEmojiCategory2Tab}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_iconEmojiCategory3Tab com.carloz.inputmethod:iconEmojiCategory3Tab}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_iconEmojiCategory4Tab com.carloz.inputmethod:iconEmojiCategory4Tab}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_iconEmojiCategory5Tab com.carloz.inputmethod:iconEmojiCategory5Tab}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_iconEmojiCategory6Tab com.carloz.inputmethod:iconEmojiCategory6Tab}</code></td><td></td></tr>
           <tr><td><code>{@link #EmojiPalettesView_iconEmojiRecentsTab com.carloz.inputmethod:iconEmojiRecentsTab}</code></td><td></td></tr>
           </table>
           @see #EmojiPalettesView_categoryIndicatorBackground
           @see #EmojiPalettesView_categoryIndicatorDrawable
           @see #EmojiPalettesView_categoryIndicatorEnabled
           @see #EmojiPalettesView_categoryPageIndicatorBackground
           @see #EmojiPalettesView_categoryPageIndicatorColor
           @see #EmojiPalettesView_iconEmojiCategory1Tab
           @see #EmojiPalettesView_iconEmojiCategory2Tab
           @see #EmojiPalettesView_iconEmojiCategory3Tab
           @see #EmojiPalettesView_iconEmojiCategory4Tab
           @see #EmojiPalettesView_iconEmojiCategory5Tab
           @see #EmojiPalettesView_iconEmojiCategory6Tab
           @see #EmojiPalettesView_iconEmojiRecentsTab
         */
        public static final int[] EmojiPalettesView = {
            0x7f010056, 0x7f010057, 0x7f010058, 0x7f010059,
            0x7f01005a, 0x7f01005b, 0x7f01005c, 0x7f01005d,
            0x7f01005e, 0x7f01005f, 0x7f010060, 0x7f010061
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#categoryIndicatorBackground}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:categoryIndicatorBackground
        */
        public static final int EmojiPalettesView_categoryIndicatorBackground = 2;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#categoryIndicatorDrawable}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:categoryIndicatorDrawable
        */
        public static final int EmojiPalettesView_categoryIndicatorDrawable = 1;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#categoryIndicatorEnabled}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:categoryIndicatorEnabled
        */
        public static final int EmojiPalettesView_categoryIndicatorEnabled = 0;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#categoryPageIndicatorBackground}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:categoryPageIndicatorBackground
        */
        public static final int EmojiPalettesView_categoryPageIndicatorBackground = 4;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#categoryPageIndicatorColor}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:categoryPageIndicatorColor
        */
        public static final int EmojiPalettesView_categoryPageIndicatorColor = 3;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiCategory1Tab}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiCategory1Tab
        */
        public static final int EmojiPalettesView_iconEmojiCategory1Tab = 6;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiCategory2Tab}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiCategory2Tab
        */
        public static final int EmojiPalettesView_iconEmojiCategory2Tab = 7;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiCategory3Tab}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiCategory3Tab
        */
        public static final int EmojiPalettesView_iconEmojiCategory3Tab = 8;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiCategory4Tab}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiCategory4Tab
        */
        public static final int EmojiPalettesView_iconEmojiCategory4Tab = 9;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiCategory5Tab}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiCategory5Tab
        */
        public static final int EmojiPalettesView_iconEmojiCategory5Tab = 10;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiCategory6Tab}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiCategory6Tab
        */
        public static final int EmojiPalettesView_iconEmojiCategory6Tab = 11;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiRecentsTab}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiRecentsTab
        */
        public static final int EmojiPalettesView_iconEmojiRecentsTab = 5;
        /** Attributes that can be used with a Keyboard.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_horizontalGap com.carloz.inputmethod:horizontalGap}</code></td><td> Default horizontal gap between keys, in the proportion of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_iconDeleteKey com.carloz.inputmethod:iconDeleteKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconDoneKey com.carloz.inputmethod:iconDoneKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconEmojiActionKey com.carloz.inputmethod:iconEmojiActionKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconEmojiNormalKey com.carloz.inputmethod:iconEmojiNormalKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconEnterKey com.carloz.inputmethod:iconEnterKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconGoKey com.carloz.inputmethod:iconGoKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconImeKey com.carloz.inputmethod:iconImeKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconLanguageSwitchKey com.carloz.inputmethod:iconLanguageSwitchKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconNextKey com.carloz.inputmethod:iconNextKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconPreviousKey com.carloz.inputmethod:iconPreviousKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSearchKey com.carloz.inputmethod:iconSearchKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSendKey com.carloz.inputmethod:iconSendKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSettingsKey com.carloz.inputmethod:iconSettingsKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShiftKey com.carloz.inputmethod:iconShiftKey}</code></td><td> Icon set for key top and key preview.</td></tr>
           <tr><td><code>{@link #Keyboard_iconShiftKeyShifted com.carloz.inputmethod:iconShiftKeyShifted}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShortcutKey com.carloz.inputmethod:iconShortcutKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShortcutKeyDisabled com.carloz.inputmethod:iconShortcutKeyDisabled}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSpaceKey com.carloz.inputmethod:iconSpaceKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSpaceKeyForNumberLayout com.carloz.inputmethod:iconSpaceKeyForNumberLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconTabKey com.carloz.inputmethod:iconTabKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconZwjKey com.carloz.inputmethod:iconZwjKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconZwnjKey com.carloz.inputmethod:iconZwnjKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardBottomPadding com.carloz.inputmethod:keyboardBottomPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardLeftPadding com.carloz.inputmethod:keyboardLeftPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardRightPadding com.carloz.inputmethod:keyboardRightPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardTopPadding com.carloz.inputmethod:keyboardTopPadding}</code></td><td> Keyboard top, bottom, left, right edges paddings, in propotion of keyboard height.</td></tr>
           <tr><td><code>{@link #Keyboard_moreKeysTemplate com.carloz.inputmethod:moreKeysTemplate}</code></td><td> More keys keyboard layout template </td></tr>
           <tr><td><code>{@link #Keyboard_rowHeight com.carloz.inputmethod:rowHeight}</code></td><td> Default height of a row (key height + vertical gap), in pixels or in the proportion of
             keyboard height.</td></tr>
           <tr><td><code>{@link #Keyboard_themeId com.carloz.inputmethod:themeId}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_touchPositionCorrectionData com.carloz.inputmethod:touchPositionCorrectionData}</code></td><td> Touch position correction </td></tr>
           <tr><td><code>{@link #Keyboard_verticalGap com.carloz.inputmethod:verticalGap}</code></td><td> Default vertical gap between rows of keys, in the proportion of keyboard height.</td></tr>
           </table>
           @see #Keyboard_horizontalGap
           @see #Keyboard_iconDeleteKey
           @see #Keyboard_iconDoneKey
           @see #Keyboard_iconEmojiActionKey
           @see #Keyboard_iconEmojiNormalKey
           @see #Keyboard_iconEnterKey
           @see #Keyboard_iconGoKey
           @see #Keyboard_iconImeKey
           @see #Keyboard_iconLanguageSwitchKey
           @see #Keyboard_iconNextKey
           @see #Keyboard_iconPreviousKey
           @see #Keyboard_iconSearchKey
           @see #Keyboard_iconSendKey
           @see #Keyboard_iconSettingsKey
           @see #Keyboard_iconShiftKey
           @see #Keyboard_iconShiftKeyShifted
           @see #Keyboard_iconShortcutKey
           @see #Keyboard_iconShortcutKeyDisabled
           @see #Keyboard_iconSpaceKey
           @see #Keyboard_iconSpaceKeyForNumberLayout
           @see #Keyboard_iconTabKey
           @see #Keyboard_iconZwjKey
           @see #Keyboard_iconZwnjKey
           @see #Keyboard_keyboardBottomPadding
           @see #Keyboard_keyboardLeftPadding
           @see #Keyboard_keyboardRightPadding
           @see #Keyboard_keyboardTopPadding
           @see #Keyboard_moreKeysTemplate
           @see #Keyboard_rowHeight
           @see #Keyboard_themeId
           @see #Keyboard_touchPositionCorrectionData
           @see #Keyboard_verticalGap
         */
        public static final int[] Keyboard = {
            0x7f01006c, 0x7f01006d, 0x7f01006e, 0x7f01006f,
            0x7f010070, 0x7f010071, 0x7f010072, 0x7f010073,
            0x7f010074, 0x7f010075, 0x7f010076, 0x7f010077,
            0x7f010078, 0x7f010079, 0x7f01007a, 0x7f01007b,
            0x7f01007c, 0x7f01007d, 0x7f01007e, 0x7f01007f,
            0x7f010080, 0x7f010081, 0x7f010082, 0x7f010083,
            0x7f010084, 0x7f010085, 0x7f010086, 0x7f010087,
            0x7f010088, 0x7f010089, 0x7f01008a, 0x7f01008b
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys, in the proportion of keyboard width. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:horizontalGap
        */
        public static final int Keyboard_horizontalGap = 7;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconDeleteKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconDeleteKey
        */
        public static final int Keyboard_iconDeleteKey = 11;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconDoneKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconDoneKey
        */
        public static final int Keyboard_iconDoneKey = 19;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiActionKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiActionKey
        */
        public static final int Keyboard_iconEmojiActionKey = 30;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEmojiNormalKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEmojiNormalKey
        */
        public static final int Keyboard_iconEmojiNormalKey = 31;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconEnterKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconEnterKey
        */
        public static final int Keyboard_iconEnterKey = 14;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconGoKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconGoKey
        */
        public static final int Keyboard_iconGoKey = 15;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconImeKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconImeKey
        */
        public static final int Keyboard_iconImeKey = 29;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconLanguageSwitchKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconLanguageSwitchKey
        */
        public static final int Keyboard_iconLanguageSwitchKey = 26;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconNextKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconNextKey
        */
        public static final int Keyboard_iconNextKey = 18;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconPreviousKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconPreviousKey
        */
        public static final int Keyboard_iconPreviousKey = 20;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconSearchKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconSearchKey
        */
        public static final int Keyboard_iconSearchKey = 16;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconSendKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconSendKey
        */
        public static final int Keyboard_iconSendKey = 17;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconSettingsKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconSettingsKey
        */
        public static final int Keyboard_iconSettingsKey = 12;
        /**
          <p>
          @attr description
           Icon set for key top and key preview.
             These should be aligned with KeyboardIconsSet.NAMES_AND_ATTR_IDS[] 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:iconShiftKey
        */
        public static final int Keyboard_iconShiftKey = 10;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconShiftKeyShifted}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconShiftKeyShifted
        */
        public static final int Keyboard_iconShiftKeyShifted = 24;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconShortcutKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconShortcutKey
        */
        public static final int Keyboard_iconShortcutKey = 22;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconShortcutKeyDisabled}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconShortcutKeyDisabled
        */
        public static final int Keyboard_iconShortcutKeyDisabled = 25;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconSpaceKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconSpaceKey
        */
        public static final int Keyboard_iconSpaceKey = 13;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconSpaceKeyForNumberLayout}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconSpaceKeyForNumberLayout
        */
        public static final int Keyboard_iconSpaceKeyForNumberLayout = 23;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconTabKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconTabKey
        */
        public static final int Keyboard_iconTabKey = 21;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconZwjKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconZwjKey
        */
        public static final int Keyboard_iconZwjKey = 28;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#iconZwnjKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:iconZwnjKey
        */
        public static final int Keyboard_iconZwnjKey = 27;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#keyboardBottomPadding}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:keyboardBottomPadding
        */
        public static final int Keyboard_keyboardBottomPadding = 3;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#keyboardLeftPadding}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:keyboardLeftPadding
        */
        public static final int Keyboard_keyboardLeftPadding = 4;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#keyboardRightPadding}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:keyboardRightPadding
        */
        public static final int Keyboard_keyboardRightPadding = 5;
        /**
          <p>
          @attr description
           Keyboard top, bottom, left, right edges paddings, in propotion of keyboard height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyboardTopPadding
        */
        public static final int Keyboard_keyboardTopPadding = 2;
        /**
          <p>
          @attr description
           More keys keyboard layout template 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:moreKeysTemplate
        */
        public static final int Keyboard_moreKeysTemplate = 9;
        /**
          <p>
          @attr description
           Default height of a row (key height + vertical gap), in pixels or in the proportion of
             keyboard height. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:rowHeight
        */
        public static final int Keyboard_rowHeight = 6;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#themeId}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ICS</code></td><td>0</td><td> This should be aligned with KeyboardTheme.THEME_ID_*. </td></tr>
<tr><td><code>KLP</code></td><td>2</td><td></td></tr>
<tr><td><code>LXXLight</code></td><td>3</td><td></td></tr>
<tr><td><code>LXXDark</code></td><td>4</td><td></td></tr>
</table>
          @attr name com.carloz.inputmethod:themeId
        */
        public static final int Keyboard_themeId = 0;
        /**
          <p>
          @attr description
           Touch position correction 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:touchPositionCorrectionData
        */
        public static final int Keyboard_touchPositionCorrectionData = 1;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys, in the proportion of keyboard height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:verticalGap
        */
        public static final int Keyboard_verticalGap = 8;
        /** Attributes that can be used with a KeyboardLayoutSet_Element.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_elementKeyboard com.carloz.inputmethod:elementKeyboard}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_elementName com.carloz.inputmethod:elementName}</code></td><td> This should be aligned with KeyboardId.</td></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_enableProximityCharsCorrection com.carloz.inputmethod:enableProximityCharsCorrection}</code></td><td> Enable proximity characters correction.</td></tr>
           </table>
           @see #KeyboardLayoutSet_Element_elementKeyboard
           @see #KeyboardLayoutSet_Element_elementName
           @see #KeyboardLayoutSet_Element_enableProximityCharsCorrection
         */
        public static final int[] KeyboardLayoutSet_Element = {
            0x7f0100c4, 0x7f0100c5, 0x7f0100c6
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#elementKeyboard}
          attribute's value can be found in the {@link #KeyboardLayoutSet_Element} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:elementKeyboard
        */
        public static final int KeyboardLayoutSet_Element_elementKeyboard = 1;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardId.ELEMENT_* 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
<tr><td><code>emojiRecents</code></td><td>10</td><td></td></tr>
<tr><td><code>emojiCategory1</code></td><td>11</td><td></td></tr>
<tr><td><code>emojiCategory2</code></td><td>12</td><td></td></tr>
<tr><td><code>emojiCategory3</code></td><td>13</td><td></td></tr>
<tr><td><code>emojiCategory4</code></td><td>14</td><td></td></tr>
<tr><td><code>emojiCategory5</code></td><td>15</td><td></td></tr>
<tr><td><code>emojiCategory6</code></td><td>16</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:elementName
        */
        public static final int KeyboardLayoutSet_Element_elementName = 0;
        /**
          <p>
          @attr description
           Enable proximity characters correction. Disabled by default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:enableProximityCharsCorrection
        */
        public static final int KeyboardLayoutSet_Element_enableProximityCharsCorrection = 2;
        /** Attributes that can be used with a KeyboardLayoutSet_Feature.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Feature_supportedScript com.carloz.inputmethod:supportedScript}</code></td><td> This should be aligned with ScriptUtils.</td></tr>
           </table>
           @see #KeyboardLayoutSet_Feature_supportedScript
         */
        public static final int[] KeyboardLayoutSet_Feature = {
            0x7f0100c7
        };
        /**
          <p>
          @attr description
           This should be aligned with ScriptUtils.SCRIPT_* 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>arabic</code></td><td>0</td><td></td></tr>
<tr><td><code>armenian</code></td><td>1</td><td></td></tr>
<tr><td><code>bengali</code></td><td>2</td><td></td></tr>
<tr><td><code>cyrillic</code></td><td>3</td><td></td></tr>
<tr><td><code>devanagari</code></td><td>4</td><td></td></tr>
<tr><td><code>georgian</code></td><td>5</td><td></td></tr>
<tr><td><code>greek</code></td><td>6</td><td></td></tr>
<tr><td><code>hebrew</code></td><td>7</td><td></td></tr>
<tr><td><code>kannada</code></td><td>8</td><td></td></tr>
<tr><td><code>khmer</code></td><td>9</td><td></td></tr>
<tr><td><code>lao</code></td><td>10</td><td></td></tr>
<tr><td><code>latin</code></td><td>11</td><td></td></tr>
<tr><td><code>malayalam</code></td><td>12</td><td></td></tr>
<tr><td><code>myanmar</code></td><td>13</td><td></td></tr>
<tr><td><code>sinhala</code></td><td>14</td><td></td></tr>
<tr><td><code>tamil</code></td><td>15</td><td></td></tr>
<tr><td><code>telugu</code></td><td>16</td><td></td></tr>
<tr><td><code>thai</code></td><td>17</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:supportedScript
        */
        public static final int KeyboardLayoutSet_Feature_supportedScript = 0;
        /** Attributes that can be used with a KeyboardTheme.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardTheme_emojiPalettesViewStyle com.carloz.inputmethod:emojiPalettesViewStyle}</code></td><td> EmojiPalettesView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_keyboardStyle com.carloz.inputmethod:keyboardStyle}</code></td><td> Keyboard style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_keyboardViewStyle com.carloz.inputmethod:keyboardViewStyle}</code></td><td> KeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_mainKeyboardViewStyle com.carloz.inputmethod:mainKeyboardViewStyle}</code></td><td> MainKeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardStyle com.carloz.inputmethod:moreKeysKeyboardStyle}</code></td><td> MoreKeysKeyboard style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardViewForActionStyle com.carloz.inputmethod:moreKeysKeyboardViewForActionStyle}</code></td><td> MoreKeysKeyboardView style for action key </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardViewStyle com.carloz.inputmethod:moreKeysKeyboardViewStyle}</code></td><td> MoreKeysKeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_suggestionStripViewStyle com.carloz.inputmethod:suggestionStripViewStyle}</code></td><td> Suggestions strip style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_suggestionWordStyle com.carloz.inputmethod:suggestionWordStyle}</code></td><td> Suggestion word style </td></tr>
           </table>
           @see #KeyboardTheme_emojiPalettesViewStyle
           @see #KeyboardTheme_keyboardStyle
           @see #KeyboardTheme_keyboardViewStyle
           @see #KeyboardTheme_mainKeyboardViewStyle
           @see #KeyboardTheme_moreKeysKeyboardStyle
           @see #KeyboardTheme_moreKeysKeyboardViewForActionStyle
           @see #KeyboardTheme_moreKeysKeyboardViewStyle
           @see #KeyboardTheme_suggestionStripViewStyle
           @see #KeyboardTheme_suggestionWordStyle
         */
        public static final int[] KeyboardTheme = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008
        };
        /**
          <p>
          @attr description
           EmojiPalettesView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:emojiPalettesViewStyle
        */
        public static final int KeyboardTheme_emojiPalettesViewStyle = 3;
        /**
          <p>
          @attr description
           Keyboard style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyboardStyle
        */
        public static final int KeyboardTheme_keyboardStyle = 0;
        /**
          <p>
          @attr description
           KeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyboardViewStyle
        */
        public static final int KeyboardTheme_keyboardViewStyle = 1;
        /**
          <p>
          @attr description
           MainKeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:mainKeyboardViewStyle
        */
        public static final int KeyboardTheme_mainKeyboardViewStyle = 2;
        /**
          <p>
          @attr description
           MoreKeysKeyboard style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:moreKeysKeyboardStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardStyle = 4;
        /**
          <p>
          @attr description
           MoreKeysKeyboardView style for action key 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:moreKeysKeyboardViewForActionStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardViewForActionStyle = 6;
        /**
          <p>
          @attr description
           MoreKeysKeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:moreKeysKeyboardViewStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardViewStyle = 5;
        /**
          <p>
          @attr description
           Suggestions strip style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:suggestionStripViewStyle
        */
        public static final int KeyboardTheme_suggestionStripViewStyle = 7;
        /**
          <p>
          @attr description
           Suggestion word style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:suggestionWordStyle
        */
        public static final int KeyboardTheme_suggestionWordStyle = 8;
        /** Attributes that can be used with a KeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardView_functionalKeyBackground com.carloz.inputmethod:functionalKeyBackground}</code></td><td> Background image for the functional key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyBackground com.carloz.inputmethod:keyBackground}</code></td><td> Background image for the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyHintLetterPadding com.carloz.inputmethod:keyHintLetterPadding}</code></td><td> Right padding of hint letter to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPopupHintLetter com.carloz.inputmethod:keyPopupHintLetter}</code></td><td> Popup hint letter string</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPopupHintLetterPadding com.carloz.inputmethod:keyPopupHintLetterPadding}</code></td><td> Bottom padding of popup hint letter to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyShiftedLetterHintPadding com.carloz.inputmethod:keyShiftedLetterHintPadding}</code></td><td> Right padding of shifted letter hint to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextShadowRadius com.carloz.inputmethod:keyTextShadowRadius}</code></td><td> Blur radius of key text shadow.</td></tr>
           <tr><td><code>{@link #KeyboardView_spacebarBackground com.carloz.inputmethod:spacebarBackground}</code></td><td> Background image for the spacebar.</td></tr>
           <tr><td><code>{@link #KeyboardView_spacebarIconWidthRatio com.carloz.inputmethod:spacebarIconWidthRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_state_has_morekeys com.carloz.inputmethod:state_has_morekeys}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_state_left_edge com.carloz.inputmethod:state_left_edge}</code></td><td> Key preview background states </td></tr>
           <tr><td><code>{@link #KeyboardView_state_right_edge com.carloz.inputmethod:state_right_edge}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_verticalCorrection com.carloz.inputmethod:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #KeyboardView_functionalKeyBackground
           @see #KeyboardView_keyBackground
           @see #KeyboardView_keyHintLetterPadding
           @see #KeyboardView_keyPopupHintLetter
           @see #KeyboardView_keyPopupHintLetterPadding
           @see #KeyboardView_keyShiftedLetterHintPadding
           @see #KeyboardView_keyTextShadowRadius
           @see #KeyboardView_spacebarBackground
           @see #KeyboardView_spacebarIconWidthRatio
           @see #KeyboardView_state_has_morekeys
           @see #KeyboardView_state_left_edge
           @see #KeyboardView_state_right_edge
           @see #KeyboardView_verticalCorrection
         */
        public static final int[] KeyboardView = {
            0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c,
            0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010,
            0x7f010011, 0x7f010012, 0x7f010013, 0x7f010014,
            0x7f010015
        };
        /**
          <p>
          @attr description
           Background image for the functional key. This image needs to be a
             {@link StateListDrawable}, with the following possible states: normal, pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:functionalKeyBackground
        */
        public static final int KeyboardView_functionalKeyBackground = 1;
        /**
          <p>
          @attr description
           Background image for the key. This image needs to be a {@link StateListDrawable},
             with the following possible states: normal, pressed, checkable, checkable+pressed,
             checkable+checked, checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyBackground
        */
        public static final int KeyboardView_keyBackground = 0;
        /**
          <p>
          @attr description
           Right padding of hint letter to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHintLetterPadding
        */
        public static final int KeyboardView_keyHintLetterPadding = 4;
        /**
          <p>
          @attr description
           Popup hint letter string


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPopupHintLetter
        */
        public static final int KeyboardView_keyPopupHintLetter = 5;
        /**
          <p>
          @attr description
           Bottom padding of popup hint letter to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPopupHintLetterPadding
        */
        public static final int KeyboardView_keyPopupHintLetterPadding = 6;
        /**
          <p>
          @attr description
           Right padding of shifted letter hint to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyShiftedLetterHintPadding
        */
        public static final int KeyboardView_keyShiftedLetterHintPadding = 7;
        /**
          <p>
          @attr description
           Blur radius of key text shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyTextShadowRadius
        */
        public static final int KeyboardView_keyTextShadowRadius = 8;
        /**
          <p>
          @attr description
           Background image for the spacebar.  This image needs to be a
             {@link StateListDrawable}, with the following possible states: normal, pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:spacebarBackground
        */
        public static final int KeyboardView_spacebarBackground = 2;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#spacebarIconWidthRatio}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:spacebarIconWidthRatio
        */
        public static final int KeyboardView_spacebarIconWidthRatio = 3;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#state_has_morekeys}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:state_has_morekeys
        */
        public static final int KeyboardView_state_has_morekeys = 11;
        /**
          <p>
          @attr description
           Key preview background states 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:state_left_edge
        */
        public static final int KeyboardView_state_left_edge = 9;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#state_right_edge}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:state_right_edge
        */
        public static final int KeyboardView_state_right_edge = 10;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:verticalCorrection
        */
        public static final int KeyboardView_verticalCorrection = 12;
        /** Attributes that can be used with a Keyboard_Case.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Case_clobberSettingsKey com.carloz.inputmethod:clobberSettingsKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_countryCode com.carloz.inputmethod:countryCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_hasShortcutKey com.carloz.inputmethod:hasShortcutKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_imeAction com.carloz.inputmethod:imeAction}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_isIconDefined com.carloz.inputmethod:isIconDefined}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_isMultiLine com.carloz.inputmethod:isMultiLine}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_keyboardLayoutSet com.carloz.inputmethod:keyboardLayoutSet}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_keyboardLayoutSetElement com.carloz.inputmethod:keyboardLayoutSetElement}</code></td><td> This should be aligned with KeyboardLayoutSet_Element's elementName.</td></tr>
           <tr><td><code>{@link #Keyboard_Case_keyboardTheme com.carloz.inputmethod:keyboardTheme}</code></td><td> This should be aligned with Keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Case_languageCode com.carloz.inputmethod:languageCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_languageSwitchKeyEnabled com.carloz.inputmethod:languageSwitchKeyEnabled}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_localeCode com.carloz.inputmethod:localeCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_mode com.carloz.inputmethod:mode}</code></td><td> This should be aligned with KeyboardId.</td></tr>
           <tr><td><code>{@link #Keyboard_Case_navigateNext com.carloz.inputmethod:navigateNext}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_navigatePrevious com.carloz.inputmethod:navigatePrevious}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_passwordInput com.carloz.inputmethod:passwordInput}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Case_clobberSettingsKey
           @see #Keyboard_Case_countryCode
           @see #Keyboard_Case_hasShortcutKey
           @see #Keyboard_Case_imeAction
           @see #Keyboard_Case_isIconDefined
           @see #Keyboard_Case_isMultiLine
           @see #Keyboard_Case_keyboardLayoutSet
           @see #Keyboard_Case_keyboardLayoutSetElement
           @see #Keyboard_Case_keyboardTheme
           @see #Keyboard_Case_languageCode
           @see #Keyboard_Case_languageSwitchKeyEnabled
           @see #Keyboard_Case_localeCode
           @see #Keyboard_Case_mode
           @see #Keyboard_Case_navigateNext
           @see #Keyboard_Case_navigatePrevious
           @see #Keyboard_Case_passwordInput
         */
        public static final int[] Keyboard_Case = {
            0x7f0100b2, 0x7f0100b3, 0x7f0100b4, 0x7f0100b5,
            0x7f0100b6, 0x7f0100b7, 0x7f0100b8, 0x7f0100b9,
            0x7f0100ba, 0x7f0100bb, 0x7f0100bc, 0x7f0100bd,
            0x7f0100be, 0x7f0100bf, 0x7f0100c0, 0x7f0100c1
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#clobberSettingsKey}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:clobberSettingsKey
        */
        public static final int Keyboard_Case_clobberSettingsKey = 7;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#countryCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:countryCode
        */
        public static final int Keyboard_Case_countryCode = 15;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#hasShortcutKey}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:hasShortcutKey
        */
        public static final int Keyboard_Case_hasShortcutKey = 8;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#imeAction}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>actionUnspecified</code></td><td>0</td><td> This should be aligned with EditorInfo.IME_ACTION_* </td></tr>
<tr><td><code>actionNone</code></td><td>1</td><td></td></tr>
<tr><td><code>actionGo</code></td><td>2</td><td></td></tr>
<tr><td><code>actionSearch</code></td><td>3</td><td></td></tr>
<tr><td><code>actionSend</code></td><td>4</td><td></td></tr>
<tr><td><code>actionNext</code></td><td>5</td><td></td></tr>
<tr><td><code>actionDone</code></td><td>6</td><td></td></tr>
<tr><td><code>actionPrevious</code></td><td>7</td><td></td></tr>
<tr><td><code>actionCustomLabel</code></td><td>0x100</td><td>  This should be aligned with KeyboardId.IME_ACTION_* </td></tr>
</table>
          @attr name com.carloz.inputmethod:imeAction
        */
        public static final int Keyboard_Case_imeAction = 11;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#isIconDefined}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:isIconDefined
        */
        public static final int Keyboard_Case_isIconDefined = 12;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#isMultiLine}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:isMultiLine
        */
        public static final int Keyboard_Case_isMultiLine = 10;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#keyboardLayoutSet}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:keyboardLayoutSet
        */
        public static final int Keyboard_Case_keyboardLayoutSet = 0;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardLayoutSet_Element's elementName. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
<tr><td><code>emojiRecents</code></td><td>10</td><td></td></tr>
<tr><td><code>emojiCategory1</code></td><td>11</td><td></td></tr>
<tr><td><code>emojiCategory2</code></td><td>12</td><td></td></tr>
<tr><td><code>emojiCategory3</code></td><td>13</td><td></td></tr>
<tr><td><code>emojiCategory4</code></td><td>14</td><td></td></tr>
<tr><td><code>emojiCategory5</code></td><td>15</td><td></td></tr>
<tr><td><code>emojiCategory6</code></td><td>16</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyboardLayoutSetElement
        */
        public static final int Keyboard_Case_keyboardLayoutSetElement = 1;
        /**
          <p>
          @attr description
           This should be aligned with Keyboard.themeId and KeyboardTheme.THEME_ID_* 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ICS</code></td><td>0</td><td></td></tr>
<tr><td><code>KLP</code></td><td>2</td><td></td></tr>
<tr><td><code>LXXLight</code></td><td>3</td><td></td></tr>
<tr><td><code>LXXDark</code></td><td>4</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyboardTheme
        */
        public static final int Keyboard_Case_keyboardTheme = 2;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#languageCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:languageCode
        */
        public static final int Keyboard_Case_languageCode = 14;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#languageSwitchKeyEnabled}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:languageSwitchKeyEnabled
        */
        public static final int Keyboard_Case_languageSwitchKeyEnabled = 9;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#localeCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:localeCode
        */
        public static final int Keyboard_Case_localeCode = 13;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardId.MODE_* 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>text</code></td><td>0</td><td></td></tr>
<tr><td><code>url</code></td><td>1</td><td></td></tr>
<tr><td><code>email</code></td><td>2</td><td></td></tr>
<tr><td><code>im</code></td><td>3</td><td></td></tr>
<tr><td><code>phone</code></td><td>4</td><td></td></tr>
<tr><td><code>number</code></td><td>5</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:mode
        */
        public static final int Keyboard_Case_mode = 3;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#navigateNext}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:navigateNext
        */
        public static final int Keyboard_Case_navigateNext = 4;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#navigatePrevious}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:navigatePrevious
        */
        public static final int Keyboard_Case_navigatePrevious = 5;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#passwordInput}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:passwordInput
        */
        public static final int Keyboard_Case_passwordInput = 6;
        /** Attributes that can be used with a Keyboard_GridRows.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_GridRows_codesArray com.carloz.inputmethod:codesArray}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_GridRows_textsArray com.carloz.inputmethod:textsArray}</code></td><td></td></tr>
           </table>
           @see #Keyboard_GridRows_codesArray
           @see #Keyboard_GridRows_textsArray
         */
        public static final int[] Keyboard_GridRows = {
            0x7f01008c, 0x7f01008d
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#codesArray}
          attribute's value can be found in the {@link #Keyboard_GridRows} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:codesArray
        */
        public static final int Keyboard_GridRows_codesArray = 0;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#textsArray}
          attribute's value can be found in the {@link #Keyboard_GridRows} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:textsArray
        */
        public static final int Keyboard_GridRows_textsArray = 1;
        /** Attributes that can be used with a Keyboard_Include.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Include_keyboardLayout com.carloz.inputmethod:keyboardLayout}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Include_keyboardLayout
         */
        public static final int[] Keyboard_Include = {
            0x7f0100b1
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#keyboardLayout}
          attribute's value can be found in the {@link #Keyboard_Include} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:keyboardLayout
        */
        public static final int Keyboard_Include_keyboardLayout = 0;
        /** Attributes that can be used with a Keyboard_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_additionalMoreKeys com.carloz.inputmethod:additionalMoreKeys}</code></td><td> The keys to display in the more keys keyboard in addition to moreKeys.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_altCode com.carloz.inputmethod:altCode}</code></td><td> The alternate unicode value that this key outputs while typing.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_backgroundType com.carloz.inputmethod:backgroundType}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_functionalTextColor com.carloz.inputmethod:functionalTextColor}</code></td><td> Color to use for the label in a key that has followFunctionalTextColor keyLabelFlags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyActionFlags com.carloz.inputmethod:keyActionFlags}</code></td><td> The key action flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabel com.carloz.inputmethod:keyHintLabel}</code></td><td> The hint label to display on the key in conjunction with the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabelColor com.carloz.inputmethod:keyHintLabelColor}</code></td><td> Key hint label color </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabelOffCenterRatio com.carloz.inputmethod:keyHintLabelOffCenterRatio}</code></td><td> The hint label's horizontal offset to the center of the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabelRatio com.carloz.inputmethod:keyHintLabelRatio}</code></td><td> Size of the text for hint label, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabelVerticalAdjustment com.carloz.inputmethod:keyHintLabelVerticalAdjustment}</code></td><td> The vertical adjustment of key hint label in proportion to its height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLetterColor com.carloz.inputmethod:keyHintLetterColor}</code></td><td> Key hint letter (= one character hint label) color </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLetterRatio com.carloz.inputmethod:keyHintLetterRatio}</code></td><td> Size of the text for hint letter (= one character hint label), in the proportion of
             key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIconDisabled com.carloz.inputmethod:keyIconDisabled}</code></td><td> The icon for disabled key </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabelFlags com.carloz.inputmethod:keyLabelFlags}</code></td><td> The key label flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabelOffCenterRatio com.carloz.inputmethod:keyLabelOffCenterRatio}</code></td><td> The label's horizontal offset to the center of the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabelSize com.carloz.inputmethod:keyLabelSize}</code></td><td> Size of the text for keys with multiple letters.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLargeLetterRatio com.carloz.inputmethod:keyLargeLetterRatio}</code></td><td> Large size of the text for one letter keys, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLetterSize com.carloz.inputmethod:keyLetterSize}</code></td><td> Size of the text for one letter keys.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyPreviewTextColor com.carloz.inputmethod:keyPreviewTextColor}</code></td><td> Key preview visual parameters 
 The text color for key press feedback.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyPreviewTextRatio com.carloz.inputmethod:keyPreviewTextRatio}</code></td><td> Size of the text for key press feedback popup, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintActivatedColor com.carloz.inputmethod:keyShiftedLetterHintActivatedColor}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintInactivatedColor com.carloz.inputmethod:keyShiftedLetterHintInactivatedColor}</code></td><td> Shifted letter hint colors </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintRatio com.carloz.inputmethod:keyShiftedLetterHintRatio}</code></td><td> Size of the text for shifted letter hint, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keySpec com.carloz.inputmethod:keySpec}</code></td><td> The label, icon to display on the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyStyle com.carloz.inputmethod:keyStyle}</code></td><td> The key style to specify a set of key attributes defined by <key_style/> </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyTextColor com.carloz.inputmethod:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyTextInactivatedColor com.carloz.inputmethod:keyTextInactivatedColor}</code></td><td> Color to use for the label in a key when in inactivated state.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyTextShadowColor com.carloz.inputmethod:keyTextShadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyTypeface com.carloz.inputmethod:keyTypeface}</code></td><td> Key top visual attributes </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyWidth com.carloz.inputmethod:keyWidth}</code></td><td> Width of the key, in the proportion of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyXPos com.carloz.inputmethod:keyXPos}</code></td><td> The X-coordinate of upper right corner of this key including horizontal gap, in the
             proportion of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_maxMoreKeysColumn com.carloz.inputmethod:maxMoreKeysColumn}</code></td><td> Maximum column of more keys keyboard </td></tr>
           <tr><td><code>{@link #Keyboard_Key_moreKeys com.carloz.inputmethod:moreKeys}</code></td><td> The keys to display in the more keys keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_visualInsetsLeft com.carloz.inputmethod:visualInsetsLeft}</code></td><td> Visual insets, in the proportion of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_visualInsetsRight com.carloz.inputmethod:visualInsetsRight}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Key_additionalMoreKeys
           @see #Keyboard_Key_altCode
           @see #Keyboard_Key_backgroundType
           @see #Keyboard_Key_functionalTextColor
           @see #Keyboard_Key_keyActionFlags
           @see #Keyboard_Key_keyHintLabel
           @see #Keyboard_Key_keyHintLabelColor
           @see #Keyboard_Key_keyHintLabelOffCenterRatio
           @see #Keyboard_Key_keyHintLabelRatio
           @see #Keyboard_Key_keyHintLabelVerticalAdjustment
           @see #Keyboard_Key_keyHintLetterColor
           @see #Keyboard_Key_keyHintLetterRatio
           @see #Keyboard_Key_keyIconDisabled
           @see #Keyboard_Key_keyLabelFlags
           @see #Keyboard_Key_keyLabelOffCenterRatio
           @see #Keyboard_Key_keyLabelSize
           @see #Keyboard_Key_keyLargeLetterRatio
           @see #Keyboard_Key_keyLetterSize
           @see #Keyboard_Key_keyPreviewTextColor
           @see #Keyboard_Key_keyPreviewTextRatio
           @see #Keyboard_Key_keyShiftedLetterHintActivatedColor
           @see #Keyboard_Key_keyShiftedLetterHintInactivatedColor
           @see #Keyboard_Key_keyShiftedLetterHintRatio
           @see #Keyboard_Key_keySpec
           @see #Keyboard_Key_keyStyle
           @see #Keyboard_Key_keyTextColor
           @see #Keyboard_Key_keyTextInactivatedColor
           @see #Keyboard_Key_keyTextShadowColor
           @see #Keyboard_Key_keyTypeface
           @see #Keyboard_Key_keyWidth
           @see #Keyboard_Key_keyXPos
           @see #Keyboard_Key_maxMoreKeysColumn
           @see #Keyboard_Key_moreKeys
           @see #Keyboard_Key_visualInsetsLeft
           @see #Keyboard_Key_visualInsetsRight
         */
        public static final int[] Keyboard_Key = {
            0x7f01008e, 0x7f01008f, 0x7f010090, 0x7f010091,
            0x7f010092, 0x7f010093, 0x7f010094, 0x7f010095,
            0x7f010096, 0x7f010097, 0x7f010098, 0x7f010099,
            0x7f01009a, 0x7f01009b, 0x7f01009c, 0x7f01009d,
            0x7f01009e, 0x7f01009f, 0x7f0100a0, 0x7f0100a1,
            0x7f0100a2, 0x7f0100a3, 0x7f0100a4, 0x7f0100a5,
            0x7f0100a6, 0x7f0100a7, 0x7f0100a8, 0x7f0100a9,
            0x7f0100aa, 0x7f0100ab, 0x7f0100ac, 0x7f0100ad,
            0x7f0100ae, 0x7f0100af, 0x7f0100b0
        };
        /**
          <p>
          @attr description
           The keys to display in the more keys keyboard in addition to moreKeys.
             The additional more keys are inserted at the '%' markers in the moreKeys if any.
             They are inserted at the head of moreKeys if none.
             If there are remaining entries of additionalMoreKeys even after all '%' markers have
             been replaced, those remaining entries are appended at the end of moreKeys. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:additionalMoreKeys
        */
        public static final int Keyboard_Key_additionalMoreKeys = 2;
        /**
          <p>
          @attr description
           The alternate unicode value that this key outputs while typing.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:altCode
        */
        public static final int Keyboard_Key_altCode = 0;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#backgroundType}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>empty</code></td><td>0</td><td> This should be aligned with Key.BACKGROUND_TYPE_* </td></tr>
<tr><td><code>normal</code></td><td>1</td><td></td></tr>
<tr><td><code>functional</code></td><td>2</td><td></td></tr>
<tr><td><code>stickyOff</code></td><td>3</td><td></td></tr>
<tr><td><code>stickyOn</code></td><td>4</td><td></td></tr>
<tr><td><code>action</code></td><td>5</td><td></td></tr>
<tr><td><code>spacebar</code></td><td>6</td><td></td></tr>
</table>
          @attr name com.carloz.inputmethod:backgroundType
        */
        public static final int Keyboard_Key_backgroundType = 4;
        /**
          <p>
          @attr description
           Color to use for the label in a key that has followFunctionalTextColor keyLabelFlags. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:functionalTextColor
        */
        public static final int Keyboard_Key_functionalTextColor = 28;
        /**
          <p>
          @attr description
           The key action flags. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>isRepeatable</code></td><td>0x01</td><td> This should be aligned with Key.ACTION_FLAGS_* </td></tr>
<tr><td><code>noKeyPreview</code></td><td>0x02</td><td></td></tr>
<tr><td><code>altCodeWhileTyping</code></td><td>0x04</td><td></td></tr>
<tr><td><code>enableLongPress</code></td><td>0x08</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyActionFlags
        */
        public static final int Keyboard_Key_keyActionFlags = 5;
        /**
          <p>
          @attr description
           The hint label to display on the key in conjunction with the label. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHintLabel
        */
        public static final int Keyboard_Key_keyHintLabel = 7;
        /**
          <p>
          @attr description
           Key hint label color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHintLabelColor
        */
        public static final int Keyboard_Key_keyHintLabelColor = 30;
        /**
          <p>
          @attr description
           The hint label's horizontal offset to the center of the key. Negative is to left and
             positive is to right. The value is in proportion of the width of
             TypefaceUtils.KEY_LABEL_REFERENCE_CHAR. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHintLabelOffCenterRatio
        */
        public static final int Keyboard_Key_keyHintLabelOffCenterRatio = 24;
        /**
          <p>
          @attr description
           Size of the text for hint label, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHintLabelRatio
        */
        public static final int Keyboard_Key_keyHintLabelRatio = 21;
        /**
          <p>
          @attr description
           The vertical adjustment of key hint label in proportion to its height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHintLabelVerticalAdjustment
        */
        public static final int Keyboard_Key_keyHintLabelVerticalAdjustment = 8;
        /**
          <p>
          @attr description
           Key hint letter (= one character hint label) color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHintLetterColor
        */
        public static final int Keyboard_Key_keyHintLetterColor = 29;
        /**
          <p>
          @attr description
           Size of the text for hint letter (= one character hint label), in the proportion of
             key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHintLetterRatio
        */
        public static final int Keyboard_Key_keyHintLetterRatio = 20;
        /**
          <p>
          @attr description
           The icon for disabled key 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyIconDisabled
        */
        public static final int Keyboard_Key_keyIconDisabled = 10;
        /**
          <p>
          @attr description
           The key label flags. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignHintLabelToBottom</code></td><td>0x02</td><td> This should be aligned with Key.LABEL_FLAGS__* </td></tr>
<tr><td><code>alignIconToBottom</code></td><td>0x04</td><td></td></tr>
<tr><td><code>alignLabelOffCenter</code></td><td>0x08</td><td></td></tr>
<tr><td><code>fontNormal</code></td><td>0x10</td><td></td></tr>
<tr><td><code>fontMonoSpace</code></td><td>0x20</td><td></td></tr>
<tr><td><code>fontDefault</code></td><td>0x30</td><td></td></tr>
<tr><td><code>followKeyLargeLetterRatio</code></td><td>0x40</td><td></td></tr>
<tr><td><code>followKeyLetterRatio</code></td><td>0x80</td><td></td></tr>
<tr><td><code>followKeyLabelRatio</code></td><td>0xC0</td><td></td></tr>
<tr><td><code>followKeyHintLabelRatio</code></td><td>0x140</td><td></td></tr>
<tr><td><code>hasPopupHint</code></td><td>0x200</td><td></td></tr>
<tr><td><code>hasShiftedLetterHint</code></td><td>0x400</td><td></td></tr>
<tr><td><code>hasHintLabel</code></td><td>0x800</td><td></td></tr>
<tr><td><code>autoXScale</code></td><td>0x4000</td><td></td></tr>
<tr><td><code>autoScale</code></td><td>0xc000</td><td> The autoScale value implies autoXScale bit on to optimize scaling code path. </td></tr>
<tr><td><code>preserveCase</code></td><td>0x10000</td><td> If true, character case of code, altCode, moreKeys, keyOutputText, keyLabel,
                 or keyHintLabel will never be subject to change. </td></tr>
<tr><td><code>shiftedLetterActivated</code></td><td>0x20000</td><td> If true, use keyShiftedLetterHintActivatedColor for the shifted letter hint and
                 keyTextInactivatedColor for the primary key top label. </td></tr>
<tr><td><code>fromCustomActionLabel</code></td><td>0x40000</td><td> If true, use EditorInfo.actionLabel for the key label. </td></tr>
<tr><td><code>followFunctionalTextColor</code></td><td>0x80000</td><td> If true, use functionalTextColor instead of ketTextColor to drawing the label on
                 the key </td></tr>
<tr><td><code>keepBackgroundAspectRatio</code></td><td>0x100000</td><td> Keep aspect ratio of key background. </td></tr>
<tr><td><code>disableKeyHintLabel</code></td><td>0x40000000</td><td> If true, disable keyHintLabel. </td></tr>
<tr><td><code>disableAdditionalMoreKeys</code></td><td>0x80000000</td><td> If true, disable additionalMoreKeys. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyLabelFlags
        */
        public static final int Keyboard_Key_keyLabelFlags = 9;
        /**
          <p>
          @attr description
           The label's horizontal offset to the center of the key. Negative is to left and
             positive is to right. The value is in proportion of the width of
             TypefaceUtils.KEY_LABEL_REFERENCE_CHAR. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyLabelOffCenterRatio
        */
        public static final int Keyboard_Key_keyLabelOffCenterRatio = 23;
        /**
          <p>
          @attr description
           Size of the text for keys with multiple letters. If specified as fraction, the text
             size is measured in the proportion of key height. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyLabelSize
        */
        public static final int Keyboard_Key_keyLabelSize = 18;
        /**
          <p>
          @attr description
           Large size of the text for one letter keys, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyLargeLetterRatio
        */
        public static final int Keyboard_Key_keyLargeLetterRatio = 19;
        /**
          <p>
          @attr description
           Size of the text for one letter keys. If specified as fraction, the text size is
             measured in the proportion of key height. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyLetterSize
        */
        public static final int Keyboard_Key_keyLetterSize = 17;
        /**
          <p>
          @attr description
           Key preview visual parameters 
 The text color for key press feedback. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPreviewTextColor
        */
        public static final int Keyboard_Key_keyPreviewTextColor = 33;
        /**
          <p>
          @attr description
           Size of the text for key press feedback popup, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPreviewTextRatio
        */
        public static final int Keyboard_Key_keyPreviewTextRatio = 34;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#keyShiftedLetterHintActivatedColor}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:keyShiftedLetterHintActivatedColor
        */
        public static final int Keyboard_Key_keyShiftedLetterHintActivatedColor = 32;
        /**
          <p>
          @attr description
           Shifted letter hint colors 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyShiftedLetterHintInactivatedColor
        */
        public static final int Keyboard_Key_keyShiftedLetterHintInactivatedColor = 31;
        /**
          <p>
          @attr description
           Size of the text for shifted letter hint, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyShiftedLetterHintRatio
        */
        public static final int Keyboard_Key_keyShiftedLetterHintRatio = 22;
        /**
          <p>
          @attr description
           The label, icon to display on the key. And code, outputText of the key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keySpec
        */
        public static final int Keyboard_Key_keySpec = 6;
        /**
          <p>
          @attr description
           The key style to specify a set of key attributes defined by <key_style/> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyStyle
        */
        public static final int Keyboard_Key_keyStyle = 11;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyTextColor
        */
        public static final int Keyboard_Key_keyTextColor = 25;
        /**
          <p>
          @attr description
           Color to use for the label in a key when in inactivated state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyTextInactivatedColor
        */
        public static final int Keyboard_Key_keyTextInactivatedColor = 27;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#keyTextShadowColor}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:keyTextShadowColor
        */
        public static final int Keyboard_Key_keyTextShadowColor = 26;
        /**
          <p>
          @attr description
           Key top visual attributes 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> This should be aligned with Typeface.NORMAL etc. </td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
<tr><td><code>boldItalic</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyTypeface
        */
        public static final int Keyboard_Key_keyTypeface = 16;
        /**
          <p>
          @attr description
           Width of the key, in the proportion of keyboard width.
             If the value is fillRight, the actual key width will be determined to fill out the
             area up to the right edge of the keyboard. 
 This should be aligned with KeyboardBuilder.Row.KEYWIDTH_* 


          <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fillRight</code></td><td>-1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyWidth
        */
        public static final int Keyboard_Key_keyWidth = 14;
        /**
          <p>
          @attr description
           The X-coordinate of upper right corner of this key including horizontal gap, in the
             proportion of keyboard width.
             If the value is negative, the origin is the right edge of the keyboard. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyXPos
        */
        public static final int Keyboard_Key_keyXPos = 15;
        /**
          <p>
          @attr description
           Maximum column of more keys keyboard 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:maxMoreKeysColumn
        */
        public static final int Keyboard_Key_maxMoreKeysColumn = 3;
        /**
          <p>
          @attr description
           The keys to display in the more keys keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:moreKeys
        */
        public static final int Keyboard_Key_moreKeys = 1;
        /**
          <p>
          @attr description
           Visual insets, in the proportion of keyboard width. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:visualInsetsLeft
        */
        public static final int Keyboard_Key_visualInsetsLeft = 12;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#visualInsetsRight}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:visualInsetsRight
        */
        public static final int Keyboard_Key_visualInsetsRight = 13;
        /** Attributes that can be used with a Keyboard_KeyStyle.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_KeyStyle_parentStyle com.carloz.inputmethod:parentStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_KeyStyle_styleName com.carloz.inputmethod:styleName}</code></td><td></td></tr>
           </table>
           @see #Keyboard_KeyStyle_parentStyle
           @see #Keyboard_KeyStyle_styleName
         */
        public static final int[] Keyboard_KeyStyle = {
            0x7f0100c2, 0x7f0100c3
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#parentStyle}
          attribute's value can be found in the {@link #Keyboard_KeyStyle} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:parentStyle
        */
        public static final int Keyboard_KeyStyle_parentStyle = 1;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#styleName}
          attribute's value can be found in the {@link #Keyboard_KeyStyle} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:styleName
        */
        public static final int Keyboard_KeyStyle_styleName = 0;
        /** Attributes that can be used with a MainKeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator com.carloz.inputmethod:altCodeKeyWhileTypingFadeinAnimator}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator com.carloz.inputmethod:altCodeKeyWhileTypingFadeoutAnimator}</code></td><td> Fadeout and fadein animator for altCodeWhileTyping keys.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_backgroundDimAlpha com.carloz.inputmethod:backgroundDimAlpha}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDetectFastMoveSpeedThreshold com.carloz.inputmethod:gestureDetectFastMoveSpeedThreshold}</code></td><td> Static threshold for starting gesture detection (keyWidth%/sec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicDistanceThresholdFrom com.carloz.inputmethod:gestureDynamicDistanceThresholdFrom}</code></td><td> Distance based threshold values for gesture detection (keyWidth%/sec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicDistanceThresholdTo com.carloz.inputmethod:gestureDynamicDistanceThresholdTo}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicThresholdDecayDuration com.carloz.inputmethod:gestureDynamicThresholdDecayDuration}</code></td><td> Dynamic threshold for gesture after fast typing (msec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicTimeThresholdFrom com.carloz.inputmethod:gestureDynamicTimeThresholdFrom}</code></td><td> Time based threshold values for gesture detection (msec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicTimeThresholdTo com.carloz.inputmethod:gestureDynamicTimeThresholdTo}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewColor com.carloz.inputmethod:gestureFloatingPreviewColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewHorizontalPadding com.carloz.inputmethod:gestureFloatingPreviewHorizontalPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewRoundRadius com.carloz.inputmethod:gestureFloatingPreviewRoundRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewTextColor com.carloz.inputmethod:gestureFloatingPreviewTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewTextLingerTimeout com.carloz.inputmethod:gestureFloatingPreviewTextLingerTimeout}</code></td><td> Delay after gesture input and gesture floating preview text dismissing in millisecond </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewTextOffset com.carloz.inputmethod:gestureFloatingPreviewTextOffset}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewTextSize com.carloz.inputmethod:gestureFloatingPreviewTextSize}</code></td><td> Attributes for GestureFloatingPreviewText </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewVerticalPadding com.carloz.inputmethod:gestureFloatingPreviewVerticalPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureRecognitionMinimumTime com.carloz.inputmethod:gestureRecognitionMinimumTime}</code></td><td> Parameters for gesture recognition (msec) and (keyWidth%/sec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureRecognitionSpeedThreshold com.carloz.inputmethod:gestureRecognitionSpeedThreshold}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureRecognitionUpdateTime com.carloz.inputmethod:gestureRecognitionUpdateTime}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureSamplingMinimumDistance com.carloz.inputmethod:gestureSamplingMinimumDistance}</code></td><td> Parameter for gesture sampling (keyWidth%/sec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureStaticTimeThresholdAfterFastTyping com.carloz.inputmethod:gestureStaticTimeThresholdAfterFastTyping}</code></td><td> Static threshold for gesture after fast typing (msec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailBodyRatio com.carloz.inputmethod:gestureTrailBodyRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailColor com.carloz.inputmethod:gestureTrailColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailEndWidth com.carloz.inputmethod:gestureTrailEndWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailFadeoutDuration com.carloz.inputmethod:gestureTrailFadeoutDuration}</code></td><td> Duration while gesture trail is fading out in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailFadeoutStartDelay com.carloz.inputmethod:gestureTrailFadeoutStartDelay}</code></td><td> Delay after gesture trail starts fading out in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailMaxInterpolationAngularThreshold com.carloz.inputmethod:gestureTrailMaxInterpolationAngularThreshold}</code></td><td> Maximum angular threshold between gesture trail interpolation segments in degree.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailMaxInterpolationDistanceThreshold com.carloz.inputmethod:gestureTrailMaxInterpolationDistanceThreshold}</code></td><td> Maximum distance threshold between gesture trail interpolation segments.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailMaxInterpolationSegments com.carloz.inputmethod:gestureTrailMaxInterpolationSegments}</code></td><td> Maximum number of gesture trail interpolation segments.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailMinSamplingDistance com.carloz.inputmethod:gestureTrailMinSamplingDistance}</code></td><td> Minimum distance between gesture trail sampling points.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailShadowRatio com.carloz.inputmethod:gestureTrailShadowRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailStartWidth com.carloz.inputmethod:gestureTrailStartWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailUpdateInterval com.carloz.inputmethod:gestureTrailUpdateInterval}</code></td><td> Interval of updating gesture trail in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_ignoreAltCodeKeyTimeout com.carloz.inputmethod:ignoreAltCodeKeyTimeout}</code></td><td> Ignore special key timeout while typing in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyHysteresisDistance com.carloz.inputmethod:keyHysteresisDistance}</code></td><td> Key detection hysteresis distance.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyHysteresisDistanceForSlidingModifier com.carloz.inputmethod:keyHysteresisDistanceForSlidingModifier}</code></td><td> Key detection hysteresis distance for shift/symbols sliding input.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewBackground com.carloz.inputmethod:keyPreviewBackground}</code></td><td> Background resource for key press feedback.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewDismissAnimator com.carloz.inputmethod:keyPreviewDismissAnimator}</code></td><td> Key preview dismiss animator </td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewHeight com.carloz.inputmethod:keyPreviewHeight}</code></td><td> Height of the key press feedback popup.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewLingerTimeout com.carloz.inputmethod:keyPreviewLingerTimeout}</code></td><td> TODO: consolidate key preview linger timeout with the key preview animation parameters.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewOffset com.carloz.inputmethod:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewShowUpAnimator com.carloz.inputmethod:keyPreviewShowUpAnimator}</code></td><td> Key preview show up animator </td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyRepeatInterval com.carloz.inputmethod:keyRepeatInterval}</code></td><td> Key repeat interval in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyRepeatStartTimeout com.carloz.inputmethod:keyRepeatStartTimeout}</code></td><td> Key repeat start timeout </td></tr>
           <tr><td><code>{@link #MainKeyboardView_keySelectionByDraggingFinger com.carloz.inputmethod:keySelectionByDraggingFinger}</code></td><td> Enable key selection by dragging finger </td></tr>
           <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarFadeoutAnimator com.carloz.inputmethod:languageOnSpacebarFadeoutAnimator}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarFinalAlpha com.carloz.inputmethod:languageOnSpacebarFinalAlpha}</code></td><td> Fadeout animator for spacebar language label.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarTextColor com.carloz.inputmethod:languageOnSpacebarTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarTextRatio com.carloz.inputmethod:languageOnSpacebarTextRatio}</code></td><td> Size of the text for spacebar language label, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarTextShadowColor com.carloz.inputmethod:languageOnSpacebarTextShadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarTextShadowRadius com.carloz.inputmethod:languageOnSpacebarTextShadowRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_longPressShiftLockTimeout com.carloz.inputmethod:longPressShiftLockTimeout}</code></td><td> Long press timeout of shift key to shift lock in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_moreKeysKeyboardForActionLayout com.carloz.inputmethod:moreKeysKeyboardForActionLayout}</code></td><td> Layout resource for more keys keyboard of action key </td></tr>
           <tr><td><code>{@link #MainKeyboardView_moreKeysKeyboardLayout com.carloz.inputmethod:moreKeysKeyboardLayout}</code></td><td> Layout resource for more keys keyboard </td></tr>
           <tr><td><code>{@link #MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint com.carloz.inputmethod:showMoreKeysKeyboardAtTouchedPoint}</code></td><td> More keys keyboard will shown at touched point.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewBodyRatio com.carloz.inputmethod:slidingKeyInputPreviewBodyRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewColor com.carloz.inputmethod:slidingKeyInputPreviewColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewShadowRatio com.carloz.inputmethod:slidingKeyInputPreviewShadowRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewWidth com.carloz.inputmethod:slidingKeyInputPreviewWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_suppressKeyPreviewAfterBatchInputDuration com.carloz.inputmethod:suppressKeyPreviewAfterBatchInputDuration}</code></td><td> Suppress showing key preview duration after batch input in millisecond </td></tr>
           <tr><td><code>{@link #MainKeyboardView_touchNoiseThresholdDistance com.carloz.inputmethod:touchNoiseThresholdDistance}</code></td><td> Touch noise threshold distance in millimeter </td></tr>
           <tr><td><code>{@link #MainKeyboardView_touchNoiseThresholdTime com.carloz.inputmethod:touchNoiseThresholdTime}</code></td><td> Touch noise threshold time in millisecond </td></tr>
           </table>
           @see #MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator
           @see #MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator
           @see #MainKeyboardView_backgroundDimAlpha
           @see #MainKeyboardView_gestureDetectFastMoveSpeedThreshold
           @see #MainKeyboardView_gestureDynamicDistanceThresholdFrom
           @see #MainKeyboardView_gestureDynamicDistanceThresholdTo
           @see #MainKeyboardView_gestureDynamicThresholdDecayDuration
           @see #MainKeyboardView_gestureDynamicTimeThresholdFrom
           @see #MainKeyboardView_gestureDynamicTimeThresholdTo
           @see #MainKeyboardView_gestureFloatingPreviewColor
           @see #MainKeyboardView_gestureFloatingPreviewHorizontalPadding
           @see #MainKeyboardView_gestureFloatingPreviewRoundRadius
           @see #MainKeyboardView_gestureFloatingPreviewTextColor
           @see #MainKeyboardView_gestureFloatingPreviewTextLingerTimeout
           @see #MainKeyboardView_gestureFloatingPreviewTextOffset
           @see #MainKeyboardView_gestureFloatingPreviewTextSize
           @see #MainKeyboardView_gestureFloatingPreviewVerticalPadding
           @see #MainKeyboardView_gestureRecognitionMinimumTime
           @see #MainKeyboardView_gestureRecognitionSpeedThreshold
           @see #MainKeyboardView_gestureRecognitionUpdateTime
           @see #MainKeyboardView_gestureSamplingMinimumDistance
           @see #MainKeyboardView_gestureStaticTimeThresholdAfterFastTyping
           @see #MainKeyboardView_gestureTrailBodyRatio
           @see #MainKeyboardView_gestureTrailColor
           @see #MainKeyboardView_gestureTrailEndWidth
           @see #MainKeyboardView_gestureTrailFadeoutDuration
           @see #MainKeyboardView_gestureTrailFadeoutStartDelay
           @see #MainKeyboardView_gestureTrailMaxInterpolationAngularThreshold
           @see #MainKeyboardView_gestureTrailMaxInterpolationDistanceThreshold
           @see #MainKeyboardView_gestureTrailMaxInterpolationSegments
           @see #MainKeyboardView_gestureTrailMinSamplingDistance
           @see #MainKeyboardView_gestureTrailShadowRatio
           @see #MainKeyboardView_gestureTrailStartWidth
           @see #MainKeyboardView_gestureTrailUpdateInterval
           @see #MainKeyboardView_ignoreAltCodeKeyTimeout
           @see #MainKeyboardView_keyHysteresisDistance
           @see #MainKeyboardView_keyHysteresisDistanceForSlidingModifier
           @see #MainKeyboardView_keyPreviewBackground
           @see #MainKeyboardView_keyPreviewDismissAnimator
           @see #MainKeyboardView_keyPreviewHeight
           @see #MainKeyboardView_keyPreviewLingerTimeout
           @see #MainKeyboardView_keyPreviewOffset
           @see #MainKeyboardView_keyPreviewShowUpAnimator
           @see #MainKeyboardView_keyRepeatInterval
           @see #MainKeyboardView_keyRepeatStartTimeout
           @see #MainKeyboardView_keySelectionByDraggingFinger
           @see #MainKeyboardView_languageOnSpacebarFadeoutAnimator
           @see #MainKeyboardView_languageOnSpacebarFinalAlpha
           @see #MainKeyboardView_languageOnSpacebarTextColor
           @see #MainKeyboardView_languageOnSpacebarTextRatio
           @see #MainKeyboardView_languageOnSpacebarTextShadowColor
           @see #MainKeyboardView_languageOnSpacebarTextShadowRadius
           @see #MainKeyboardView_longPressShiftLockTimeout
           @see #MainKeyboardView_moreKeysKeyboardForActionLayout
           @see #MainKeyboardView_moreKeysKeyboardLayout
           @see #MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint
           @see #MainKeyboardView_slidingKeyInputPreviewBodyRatio
           @see #MainKeyboardView_slidingKeyInputPreviewColor
           @see #MainKeyboardView_slidingKeyInputPreviewShadowRatio
           @see #MainKeyboardView_slidingKeyInputPreviewWidth
           @see #MainKeyboardView_suppressKeyPreviewAfterBatchInputDuration
           @see #MainKeyboardView_touchNoiseThresholdDistance
           @see #MainKeyboardView_touchNoiseThresholdTime
         */
        public static final int[] MainKeyboardView = {
            0x7f010016, 0x7f010017, 0x7f010018, 0x7f010019,
            0x7f01001a, 0x7f01001b, 0x7f01001c, 0x7f01001d,
            0x7f01001e, 0x7f01001f, 0x7f010020, 0x7f010021,
            0x7f010022, 0x7f010023, 0x7f010024, 0x7f010025,
            0x7f010026, 0x7f010027, 0x7f010028, 0x7f010029,
            0x7f01002a, 0x7f01002b, 0x7f01002c, 0x7f01002d,
            0x7f01002e, 0x7f01002f, 0x7f010030, 0x7f010031,
            0x7f010032, 0x7f010033, 0x7f010034, 0x7f010035,
            0x7f010036, 0x7f010037, 0x7f010038, 0x7f010039,
            0x7f01003a, 0x7f01003b, 0x7f01003c, 0x7f01003d,
            0x7f01003e, 0x7f01003f, 0x7f010040, 0x7f010041,
            0x7f010042, 0x7f010043, 0x7f010044, 0x7f010045,
            0x7f010046, 0x7f010047, 0x7f010048, 0x7f010049,
            0x7f01004a, 0x7f01004b, 0x7f01004c, 0x7f01004d,
            0x7f01004e, 0x7f01004f, 0x7f010050, 0x7f010051,
            0x7f010052, 0x7f010053, 0x7f010054
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#altCodeKeyWhileTypingFadeinAnimator}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:altCodeKeyWhileTypingFadeinAnimator
        */
        public static final int MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator = 7;
        /**
          <p>
          @attr description
           Fadeout and fadein animator for altCodeWhileTyping keys. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:altCodeKeyWhileTypingFadeoutAnimator
        */
        public static final int MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator = 6;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#backgroundDimAlpha}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:backgroundDimAlpha
        */
        public static final int MainKeyboardView_backgroundDimAlpha = 29;
        /**
          <p>
          @attr description
           Static threshold for starting gesture detection (keyWidth%/sec) 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureDetectFastMoveSpeedThreshold
        */
        public static final int MainKeyboardView_gestureDetectFastMoveSpeedThreshold = 52;
        /**
          <p>
          @attr description
           Distance based threshold values for gesture detection (keyWidth%/sec) 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureDynamicDistanceThresholdFrom
        */
        public static final int MainKeyboardView_gestureDynamicDistanceThresholdFrom = 56;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureDynamicDistanceThresholdTo}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureDynamicDistanceThresholdTo
        */
        public static final int MainKeyboardView_gestureDynamicDistanceThresholdTo = 57;
        /**
          <p>
          @attr description
           Dynamic threshold for gesture after fast typing (msec) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureDynamicThresholdDecayDuration
        */
        public static final int MainKeyboardView_gestureDynamicThresholdDecayDuration = 53;
        /**
          <p>
          @attr description
           Time based threshold values for gesture detection (msec) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureDynamicTimeThresholdFrom
        */
        public static final int MainKeyboardView_gestureDynamicTimeThresholdFrom = 54;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureDynamicTimeThresholdTo}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureDynamicTimeThresholdTo
        */
        public static final int MainKeyboardView_gestureDynamicTimeThresholdTo = 55;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureFloatingPreviewColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureFloatingPreviewColor
        */
        public static final int MainKeyboardView_gestureFloatingPreviewColor = 47;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureFloatingPreviewHorizontalPadding}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureFloatingPreviewHorizontalPadding
        */
        public static final int MainKeyboardView_gestureFloatingPreviewHorizontalPadding = 48;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureFloatingPreviewRoundRadius}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureFloatingPreviewRoundRadius
        */
        public static final int MainKeyboardView_gestureFloatingPreviewRoundRadius = 50;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureFloatingPreviewTextColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureFloatingPreviewTextColor
        */
        public static final int MainKeyboardView_gestureFloatingPreviewTextColor = 45;
        /**
          <p>
          @attr description
           Delay after gesture input and gesture floating preview text dismissing in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureFloatingPreviewTextLingerTimeout
        */
        public static final int MainKeyboardView_gestureFloatingPreviewTextLingerTimeout = 43;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureFloatingPreviewTextOffset}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureFloatingPreviewTextOffset
        */
        public static final int MainKeyboardView_gestureFloatingPreviewTextOffset = 46;
        /**
          <p>
          @attr description
           Attributes for GestureFloatingPreviewText 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureFloatingPreviewTextSize
        */
        public static final int MainKeyboardView_gestureFloatingPreviewTextSize = 44;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureFloatingPreviewVerticalPadding}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureFloatingPreviewVerticalPadding
        */
        public static final int MainKeyboardView_gestureFloatingPreviewVerticalPadding = 49;
        /**
          <p>
          @attr description
           Parameters for gesture recognition (msec) and (keyWidth%/sec) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureRecognitionMinimumTime
        */
        public static final int MainKeyboardView_gestureRecognitionMinimumTime = 59;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureRecognitionSpeedThreshold}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureRecognitionSpeedThreshold
        */
        public static final int MainKeyboardView_gestureRecognitionSpeedThreshold = 61;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureRecognitionUpdateTime}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureRecognitionUpdateTime
        */
        public static final int MainKeyboardView_gestureRecognitionUpdateTime = 60;
        /**
          <p>
          @attr description
           Parameter for gesture sampling (keyWidth%/sec) 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureSamplingMinimumDistance
        */
        public static final int MainKeyboardView_gestureSamplingMinimumDistance = 58;
        /**
          <p>
          @attr description
           Static threshold for gesture after fast typing (msec) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureStaticTimeThresholdAfterFastTyping
        */
        public static final int MainKeyboardView_gestureStaticTimeThresholdAfterFastTyping = 51;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureTrailBodyRatio}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureTrailBodyRatio
        */
        public static final int MainKeyboardView_gestureTrailBodyRatio = 41;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureTrailColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureTrailColor
        */
        public static final int MainKeyboardView_gestureTrailColor = 38;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureTrailEndWidth}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureTrailEndWidth
        */
        public static final int MainKeyboardView_gestureTrailEndWidth = 40;
        /**
          <p>
          @attr description
           Duration while gesture trail is fading out in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureTrailFadeoutDuration
        */
        public static final int MainKeyboardView_gestureTrailFadeoutDuration = 36;
        /**
          <p>
          @attr description
           Delay after gesture trail starts fading out in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureTrailFadeoutStartDelay
        */
        public static final int MainKeyboardView_gestureTrailFadeoutStartDelay = 35;
        /**
          <p>
          @attr description
           Maximum angular threshold between gesture trail interpolation segments in degree. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureTrailMaxInterpolationAngularThreshold
        */
        public static final int MainKeyboardView_gestureTrailMaxInterpolationAngularThreshold = 32;
        /**
          <p>
          @attr description
           Maximum distance threshold between gesture trail interpolation segments. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureTrailMaxInterpolationDistanceThreshold
        */
        public static final int MainKeyboardView_gestureTrailMaxInterpolationDistanceThreshold = 33;
        /**
          <p>
          @attr description
           Maximum number of gesture trail interpolation segments. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureTrailMaxInterpolationSegments
        */
        public static final int MainKeyboardView_gestureTrailMaxInterpolationSegments = 34;
        /**
          <p>
          @attr description
           Minimum distance between gesture trail sampling points. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureTrailMinSamplingDistance
        */
        public static final int MainKeyboardView_gestureTrailMinSamplingDistance = 31;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureTrailShadowRatio}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureTrailShadowRatio
        */
        public static final int MainKeyboardView_gestureTrailShadowRatio = 42;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#gestureTrailStartWidth}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:gestureTrailStartWidth
        */
        public static final int MainKeyboardView_gestureTrailStartWidth = 39;
        /**
          <p>
          @attr description
           Interval of updating gesture trail in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:gestureTrailUpdateInterval
        */
        public static final int MainKeyboardView_gestureTrailUpdateInterval = 37;
        /**
          <p>
          @attr description
           Ignore special key timeout while typing in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:ignoreAltCodeKeyTimeout
        */
        public static final int MainKeyboardView_ignoreAltCodeKeyTimeout = 20;
        /**
          <p>
          @attr description
           Key detection hysteresis distance. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHysteresisDistance
        */
        public static final int MainKeyboardView_keyHysteresisDistance = 8;
        /**
          <p>
          @attr description
           Key detection hysteresis distance for shift/symbols sliding input. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyHysteresisDistanceForSlidingModifier
        */
        public static final int MainKeyboardView_keyHysteresisDistanceForSlidingModifier = 9;
        /**
          <p>
          @attr description
           Background resource for key press feedback.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPreviewBackground
        */
        public static final int MainKeyboardView_keyPreviewBackground = 21;
        /**
          <p>
          @attr description
           Key preview dismiss animator 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPreviewDismissAnimator
        */
        public static final int MainKeyboardView_keyPreviewDismissAnimator = 26;
        /**
          <p>
          @attr description
           Height of the key press feedback popup. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPreviewHeight
        */
        public static final int MainKeyboardView_keyPreviewHeight = 23;
        /**
          <p>
          @attr description
           TODO: consolidate key preview linger timeout with the key preview animation parameters. 
 Delay after key releasing and key press feedback dismissing in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPreviewLingerTimeout
        */
        public static final int MainKeyboardView_keyPreviewLingerTimeout = 24;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPreviewOffset
        */
        public static final int MainKeyboardView_keyPreviewOffset = 22;
        /**
          <p>
          @attr description
           Key preview show up animator 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyPreviewShowUpAnimator
        */
        public static final int MainKeyboardView_keyPreviewShowUpAnimator = 25;
        /**
          <p>
          @attr description
           Key repeat interval in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyRepeatInterval
        */
        public static final int MainKeyboardView_keyRepeatInterval = 18;
        /**
          <p>
          @attr description
           Key repeat start timeout 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keyRepeatStartTimeout
        */
        public static final int MainKeyboardView_keyRepeatStartTimeout = 17;
        /**
          <p>
          @attr description
           Enable key selection by dragging finger 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:keySelectionByDraggingFinger
        */
        public static final int MainKeyboardView_keySelectionByDraggingFinger = 12;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#languageOnSpacebarFadeoutAnimator}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:languageOnSpacebarFadeoutAnimator
        */
        public static final int MainKeyboardView_languageOnSpacebarFadeoutAnimator = 5;
        /**
          <p>
          @attr description
           Fadeout animator for spacebar language label. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:languageOnSpacebarFinalAlpha
        */
        public static final int MainKeyboardView_languageOnSpacebarFinalAlpha = 4;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#languageOnSpacebarTextColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:languageOnSpacebarTextColor
        */
        public static final int MainKeyboardView_languageOnSpacebarTextColor = 1;
        /**
          <p>
          @attr description
           Size of the text for spacebar language label, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:languageOnSpacebarTextRatio
        */
        public static final int MainKeyboardView_languageOnSpacebarTextRatio = 0;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#languageOnSpacebarTextShadowColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:languageOnSpacebarTextShadowColor
        */
        public static final int MainKeyboardView_languageOnSpacebarTextShadowColor = 3;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#languageOnSpacebarTextShadowRadius}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:languageOnSpacebarTextShadowRadius
        */
        public static final int MainKeyboardView_languageOnSpacebarTextShadowRadius = 2;
        /**
          <p>
          @attr description
           Long press timeout of shift key to shift lock in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:longPressShiftLockTimeout
        */
        public static final int MainKeyboardView_longPressShiftLockTimeout = 19;
        /**
          <p>
          @attr description
           Layout resource for more keys keyboard of action key 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:moreKeysKeyboardForActionLayout
        */
        public static final int MainKeyboardView_moreKeysKeyboardForActionLayout = 28;
        /**
          <p>
          @attr description
           Layout resource for more keys keyboard 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:moreKeysKeyboardLayout
        */
        public static final int MainKeyboardView_moreKeysKeyboardLayout = 27;
        /**
          <p>
          @attr description
           More keys keyboard will shown at touched point. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:showMoreKeysKeyboardAtTouchedPoint
        */
        public static final int MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint = 30;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#slidingKeyInputPreviewBodyRatio}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:slidingKeyInputPreviewBodyRatio
        */
        public static final int MainKeyboardView_slidingKeyInputPreviewBodyRatio = 15;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#slidingKeyInputPreviewColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:slidingKeyInputPreviewColor
        */
        public static final int MainKeyboardView_slidingKeyInputPreviewColor = 13;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#slidingKeyInputPreviewShadowRatio}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:slidingKeyInputPreviewShadowRatio
        */
        public static final int MainKeyboardView_slidingKeyInputPreviewShadowRatio = 16;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#slidingKeyInputPreviewWidth}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:slidingKeyInputPreviewWidth
        */
        public static final int MainKeyboardView_slidingKeyInputPreviewWidth = 14;
        /**
          <p>
          @attr description
           Suppress showing key preview duration after batch input in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:suppressKeyPreviewAfterBatchInputDuration
        */
        public static final int MainKeyboardView_suppressKeyPreviewAfterBatchInputDuration = 62;
        /**
          <p>
          @attr description
           Touch noise threshold distance in millimeter 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:touchNoiseThresholdDistance
        */
        public static final int MainKeyboardView_touchNoiseThresholdDistance = 11;
        /**
          <p>
          @attr description
           Touch noise threshold time in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.carloz.inputmethod:touchNoiseThresholdTime
        */
        public static final int MainKeyboardView_touchNoiseThresholdTime = 10;
        /** Attributes that can be used with a MoreKeysKeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MoreKeysKeyboardView_divider com.carloz.inputmethod:divider}</code></td><td></td></tr>
           </table>
           @see #MoreKeysKeyboardView_divider
         */
        public static final int[] MoreKeysKeyboardView = {
            0x7f010055
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#divider}
          attribute's value can be found in the {@link #MoreKeysKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.carloz.inputmethod:divider
        */
        public static final int MoreKeysKeyboardView_divider = 0;
        /** Attributes that can be used with a SeekBarDialogPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SeekBarDialogPreference_maxValue com.carloz.inputmethod:maxValue}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarDialogPreference_minValue com.carloz.inputmethod:minValue}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarDialogPreference_stepValue com.carloz.inputmethod:stepValue}</code></td><td></td></tr>
           </table>
           @see #SeekBarDialogPreference_maxValue
           @see #SeekBarDialogPreference_minValue
           @see #SeekBarDialogPreference_stepValue
         */
        public static final int[] SeekBarDialogPreference = {
            0x7f0100c8, 0x7f0100c9, 0x7f0100ca
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#maxValue}
          attribute's value can be found in the {@link #SeekBarDialogPreference} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:maxValue
        */
        public static final int SeekBarDialogPreference_maxValue = 0;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#minValue}
          attribute's value can be found in the {@link #SeekBarDialogPreference} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:minValue
        */
        public static final int SeekBarDialogPreference_minValue = 1;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#stepValue}
          attribute's value can be found in the {@link #SeekBarDialogPreference} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:stepValue
        */
        public static final int SeekBarDialogPreference_stepValue = 2;
        /** Attributes that can be used with a SuggestionStripView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SuggestionStripView_alphaObsoleted com.carloz.inputmethod:alphaObsoleted}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_centerSuggestionPercentile com.carloz.inputmethod:centerSuggestionPercentile}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_colorAutoCorrect com.carloz.inputmethod:colorAutoCorrect}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_colorSuggested com.carloz.inputmethod:colorSuggested}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_colorTypedWord com.carloz.inputmethod:colorTypedWord}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_colorValidTypedWord com.carloz.inputmethod:colorValidTypedWord}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_maxMoreSuggestionsRow com.carloz.inputmethod:maxMoreSuggestionsRow}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_minMoreSuggestionsWidth com.carloz.inputmethod:minMoreSuggestionsWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_suggestionStripOptions com.carloz.inputmethod:suggestionStripOptions}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_suggestionsCountInStrip com.carloz.inputmethod:suggestionsCountInStrip}</code></td><td></td></tr>
           </table>
           @see #SuggestionStripView_alphaObsoleted
           @see #SuggestionStripView_centerSuggestionPercentile
           @see #SuggestionStripView_colorAutoCorrect
           @see #SuggestionStripView_colorSuggested
           @see #SuggestionStripView_colorTypedWord
           @see #SuggestionStripView_colorValidTypedWord
           @see #SuggestionStripView_maxMoreSuggestionsRow
           @see #SuggestionStripView_minMoreSuggestionsWidth
           @see #SuggestionStripView_suggestionStripOptions
           @see #SuggestionStripView_suggestionsCountInStrip
         */
        public static final int[] SuggestionStripView = {
            0x7f010062, 0x7f010063, 0x7f010064, 0x7f010065,
            0x7f010066, 0x7f010067, 0x7f010068, 0x7f010069,
            0x7f01006a, 0x7f01006b
        };
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#alphaObsoleted}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:alphaObsoleted
        */
        public static final int SuggestionStripView_alphaObsoleted = 5;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#centerSuggestionPercentile}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:centerSuggestionPercentile
        */
        public static final int SuggestionStripView_centerSuggestionPercentile = 7;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#colorAutoCorrect}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:colorAutoCorrect
        */
        public static final int SuggestionStripView_colorAutoCorrect = 3;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#colorSuggested}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:colorSuggested
        */
        public static final int SuggestionStripView_colorSuggested = 4;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#colorTypedWord}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:colorTypedWord
        */
        public static final int SuggestionStripView_colorTypedWord = 2;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#colorValidTypedWord}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:colorValidTypedWord
        */
        public static final int SuggestionStripView_colorValidTypedWord = 1;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#maxMoreSuggestionsRow}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:maxMoreSuggestionsRow
        */
        public static final int SuggestionStripView_maxMoreSuggestionsRow = 8;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#minMoreSuggestionsWidth}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:minMoreSuggestionsWidth
        */
        public static final int SuggestionStripView_minMoreSuggestionsWidth = 9;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#suggestionStripOptions}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>autoCorrectBold</code></td><td>0x01</td><td> This should be aligned with SuggestionStripLayoutHelper.AUTO_CORRECT_* and etc. </td></tr>
<tr><td><code>autoCorrectUnderline</code></td><td>0x02</td><td></td></tr>
<tr><td><code>validTypedWordBold</code></td><td>0x04</td><td></td></tr>
</table>
          @attr name com.carloz.inputmethod:suggestionStripOptions
        */
        public static final int SuggestionStripView_suggestionStripOptions = 0;
        /**
          <p>This symbol is the offset where the {@link com.carloz.inputmethod.R.attr#suggestionsCountInStrip}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.carloz.inputmethod:suggestionsCountInStrip
        */
        public static final int SuggestionStripView_suggestionsCountInStrip = 6;
    };
}
